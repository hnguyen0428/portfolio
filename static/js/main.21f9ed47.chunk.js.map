{"version":3,"sources":["mobile/Home.js","config/firebase.js","firebase/auth.js","firebase/logger.js","constants/CSSColor.js","desktop/common/props.js","desktop/components/Flexbox/Flexbox.js","desktop/components/Flexbox/index.js","desktop/components/Navbar/style.js","desktop/components/Text/Text.js","desktop/components/Text/index.js","desktop/components/Button/index.js","desktop/components/Button/Button.js","desktop/components/NavbarUnit/index.js","desktop/components/NavbarUnit/NavbarUnit.js","desktop/components/Image/index.js","desktop/components/Image/Image.js","desktop/components/Icon/index.js","desktop/components/Icon/Icon.js","desktop/components/NavbarUnitIcon/index.js","desktop/components/NavbarUnitIcon/NavbarUnitIcon.js","desktop/components/Navbar/index.js","desktop/components/Navbar/Navbar.js","static/Profile.js","desktop/style.js","desktop/components/ProfileImage/index.js","desktop/components/ProfileImage/ProfileImage.js","desktop/components/TextInput/TextInput.js","desktop/components/TextInput/index.js","desktop/history.js","desktop/sections/AboutMe/index.js","desktop/sections/AboutMe/AboutMe.js","firebase/profile.js","desktop/components/Card/index.js","desktop/components/Card/Card.js","desktop/components/Modal/index.js","desktop/components/Modal/Modal.js","desktop/components/HeaderText/index.js","desktop/components/HeaderText/HeaderText.js","desktop/sections/WorkExperience/WorkExperienceCard/index.js","desktop/sections/WorkExperience/WorkExperienceCard/WorkExperienceCard.js","desktop/sections/WorkExperience/index.js","desktop/sections/WorkExperience/WorkExperience.js","desktop/sections/Projects/ProjectCard/index.js","desktop/sections/Projects/ProjectCard/ProjectCard.js","desktop/sections/Projects/index.js","desktop/sections/Projects/Projects.js","desktop/Home.js","desktop/common/utils.js","serviceWorker.js","desktop/Login.js","index.js"],"names":["Home","View","style","styles","box","text","React","Component","StyleSheet","create","padding","fontWeight","firebase","require","initializeApp","apiKey","databaseURL","projectId","messagingSenderId","database","auth","fetchLoginState","onSuccess","currentUser","onAuthStateChanged","user","Logger","creationTime","moment","format","deviceInfo","isMobile","isMobileOnly","isTablet","isBrowser","osName","browserName","mobileModel","data","onFailure","loggedIn","extraData","getExtraData","ref","push","then","catch","CSSColor","GRAY_100","stylePropType","CommonProps","props","widthPct","width","String","heightPct","height","autoHeight","autoWidth","maxHeight","maxWidth","minHeight","minWidth","paddingAll","paddingTop","paddingLeft","paddingBottom","paddingRight","paddingVertical","paddingHorizontal","marginAll","marginTop","marginLeft","marginBottom","marginRight","marginVertical","marginHorizontal","autoMarginTop","autoMarginLeft","autoMarginBottom","autoMarginRight","topBorder","leftBorder","bottomBorder","rightBorder","allBorder","borderColor","GRAY_20","borderWidth","borderRadius","borderTopStyle","borderLeftStyle","borderBottomStyle","borderRightStyle","borderStyle","fontSize","fontColor","PRIMARY_TEXT","color","SECONDARY_TEXT","lineHeight","PropTypes","number","bool","justifyContent","oneOf","alignSelf","alignItems","string","href","target","logDescription","logClick","logExtra","object","Flexbox","onClick","e","display","flexDirection","this","flexWrap","flexGrow","flexShrink","flexBasis","backgroundColor","wordWrap","hidden","setPaddings","setMargins","setDimensions","setBorders","className","rel","children","navbar","BLACK_ALPHA_80","Text","logData","action","description","extra","genLog","setTextStyleOrDefault","cls","buttonFont","join","headingComponent","heading","Button","disabled","label","disabledBackgroundColor","disabledColor","disabledBorderColor","textColorStyle","NavbarUnit","position","WHITE","undefined","Image","alt","src","Icon","size","NavbarUnitIcon","Navbar","navbarStyle","blur","profile","objs","0","name","title","date","techUsed","logo","1","shortDesc","longDesc","repo","2","3","root","ProfileImage","circular","TextInput","onChange","value","textarea","labelComponent","fillHeight","rows","placeholder","readOnly","pattern","type","autoComplete","createHashHistory","AboutMe","onChangeHeading","val","setState","onChangeText","onClickUpdate","updates","update","updateProfileText","state","error","alert","aboutMe","cached","sessionStorage","getItem","JSON","parse","once","snap","obj","setItem","stringify","fetchProfileText","LIGHT_WHITE","profileImage","GRAY_80","BLACK_ALPHA_60","email","allowEdit","Card","Modal","onClickModal","stopPropagation","modalSizes","show","onBackdropClick","GRAY_05","small","medium","large","HeaderText","titleSize","subtitleSize","subtitle","WorkExperienceCard","openModal","showModal","closeModal","onClickCard","workExpObj","onClickDoneButton","onChangeDescription","dbKey","onChangeTechUsed","onSave","header","MODAL_TEXT","WorkExperience","updateWorkExperienceText","onClickSaveButton","content","key","updateWorkExperienceContent","workExperience","fetchWorkExperienceText","keys","Object","sort","GRAY_70","map","index","ProjectCard","projectObj","onClickRepoButton","onChangeLongDesc","onChangeShortDesc","modalContent","Projects","updateProjectsText","updateProjectContent","projects","fetchProjectsText","onClickLogout","signOut","edit","URLSearchParams","history","location","search","get","getEditMode","_","githubLink","linkedinLink","fbLink","Boolean","window","hostname","match","Login","onEmailChange","onPasswordChange","password","onClickLogin","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","console","log","hasBorder","id","length","ReactDOM","render","document","getElementById","exact","path","component","DesktopHome","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21f9ed47.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native-web';\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <View style={styles.box}>\n        <Text style={styles.text}>Mobile Portfolio Coming Soon (:</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: {padding: 10},\n  text: {fontWeight: 'bold'}\n});\n\n\nexport default Home;","const firebase = require('firebase');\n\nlet config = {\n  apiKey: \"AIzaSyCqpJRMS0Gk0vWAjHaZNrCe_dmrO51xEZ4\",\n  databaseURL: \"https://daniel-nguyen-portfolio.firebaseio.com/\",\n  projectId: \"daniel-nguyen-portfolio\",\n  messagingSenderId: \"517703319819\",\n};\n\nfirebase.initializeApp(config);\n\nexport const database = firebase.database();\nexport const auth = firebase.auth();","import {auth} from '../config/firebase';\nconst firebase = require('firebase');\n\n\nexport function loginWithEmail(email, password, onSuccess, onFailure) {\n  auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(() => {\n      auth.signInWithEmailAndPassword(email, password)\n        .then((user => {\n          console.log('Successfully logged in.');\n          if (onSuccess) {\n            onSuccess(user);\n          }\n        }))\n        .catch((error) => {\n          console.log('Failed logging in.');\n          if (onFailure) {\n            onFailure(error);\n          }\n        });\n    }).catch((error) => {\n      console.log('Failed logging in.');\n    });\n}\n\nexport function logout(onSuccess, onFailure) {\n  auth.signOut().then(onSuccess).catch(onFailure)\n}\n\nexport function fetchLoginState(onSuccess) {\n  let user = auth.currentUser;\n  if (user) {\n    if (onSuccess) {\n      onSuccess(true);\n    }\n    return;\n  }\n\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      if (onSuccess) {\n        onSuccess(true);\n      }\n    } else {\n      if (onSuccess) {\n        onSuccess(false);\n      }\n    }\n  });\n}","import {database} from '../config/firebase';\nimport {fetchLoginState} from \"./auth\";\nimport moment from 'moment';\nimport {\n  isMobile,\n  osName,\n  isMobileOnly,\n  isBrowser,\n  browserName,\n  mobileModel\n} from 'react-device-detect';\n\n\nclass Logger {\n  static getExtraData() {\n    return {\n      creationTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n      deviceInfo: {\n        isMobile: isMobileOnly,\n        isTablet: isMobile && !isMobileOnly,\n        isBrowser: isBrowser,\n        osName: osName,\n        browserName: browserName,\n        mobileModel: mobileModel\n      }\n    };\n  }\n\n  static genLog(data, onSuccess, onFailure) {\n    fetchLoginState((loggedIn) => {\n      // Only log if not logged in\n      if (!loggedIn) {\n        let extraData = this.getExtraData();\n        data = {\n          ...extraData,\n          ...data\n        };\n\n        database.ref('actions').push(data)\n          .then(onSuccess).catch(onFailure)\n      }\n    });\n  }\n}\n\nexport default Logger;","\nclass CSSColor {\n  static get WHITE() {\n    return '#FFFFFF';\n  }\n\n  static get LIGHT_WHITE() {\n    return '#FAFAFA';\n  }\n\n  static get GRAY_00() {\n    return '#F5F6F7';\n  }\n\n  static get GRAY_05() {\n    return '#F2F3F5';\n  }\n\n  static get GRAY_10() {\n    return '#EBEDF0';\n  }\n\n  static get GRAY_20() {\n    return '#DADDE1';\n  }\n\n  static get GRAY_25() {\n    return '#CCD0D5';\n  }\n\n  static get GRAY_30() {\n    return '#BEC3C9';\n  }\n\n  static get GRAY_45() {\n    return '#8D949E';\n  }\n\n  static get GRAY_70() {\n    return '#606770';\n  }\n\n  static get GRAY_80() {\n    return '#444950';\n  }\n\n  static get GRAY_100() {\n    return '#1C1E21';\n  }\n\n  static get GRAY() {\n    return '#D2D5DF';\n  }\n\n  static get BLACK() {\n    return '#000000';\n  }\n\n  static get BLACK_ALPHA_05() {\n    return 'rgba(0, 0, 0, 0.05)';\n  }\n\n  static get BLACK_ALPHA_10() {\n    return 'rgba(0, 0, 0, 0.1)';\n  }\n\n  static get BLACK_ALPHA_20() {\n    return 'rgba(0, 0, 0, 0.2)';\n  }\n\n  static get BLACK_ALPHA_30() {\n    return 'rgba(0, 0, 0, 0.3)';\n  }\n\n  static get BLACK_ALPHA_40() {\n    return 'rgba(0, 0, 0, 0.4)';\n  }\n\n  static get BLACK_ALPHA_50() {\n    return 'rgba(0, 0, 0, 0.5)';\n  }\n\n  static get BLACK_ALPHA_60() {\n    return 'rgba(0, 0, 0, 0.6)';\n  }\n\n  static get BLACK_ALPHA_70() {\n    return 'rgba(0, 0, 0, 0.7)';\n  }\n\n  static get BLACK_ALPHA_80() {\n    return 'rgba(0, 0, 0, 0.8)';\n  }\n\n  static get BLACK_ALPHA_90() {\n    return 'rgba(0, 0, 0, 0.9)';\n  }\n\n  static get SECONDARY_TEXT() {\n    return 'rgba(145, 148, 155, 1.0)';\n  }\n\n  static get MODAL_TEXT() {\n    return 'rgba(117, 117, 117, 1.0)';\n  }\n\n  static get PRIMARY_TEXT() {\n    return CSSColor.GRAY_100;\n  }\n\n  static get BLUE() {\n    return '#3577EA';\n  }\n}\n\nexport default CSSColor;","import PropTypes from \"prop-types\";\nimport CSSColor from \"../../constants/CSSColor\";\nconst stylePropType = require('react-style-proptype');\n\n\nexport default class CommonProps {\n  static get paddings() {\n    return {\n      paddingVertical: PropTypes.number,\n      paddingHorizontal: PropTypes.number,\n      paddingLeft: PropTypes.number,\n      paddingRight: PropTypes.number,\n      paddingTop: PropTypes.number,\n      paddingBottom: PropTypes.number,\n      paddingAll: PropTypes.number,\n    };\n  }\n\n  static get margins() {\n    return {\n      marginVertical: PropTypes.number,\n      marginHorizontal: PropTypes.number,\n      marginLeft: PropTypes.number,\n      marginRight: PropTypes.number,\n      marginTop: PropTypes.number,\n      marginBottom: PropTypes.number,\n      marginAll: PropTypes.number,\n      autoMarginTop: PropTypes.bool,\n      autoMarginLeft: PropTypes.bool,\n      autoMarginBottom: PropTypes.bool,\n      autoMarginRight: PropTypes.bool,\n    };\n  }\n\n  static get alignments() {\n    return {\n      justifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),\n      alignSelf: PropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n      alignItems: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),\n    };\n  }\n\n  static get dimensions() {\n    return {\n      width: PropTypes.number,\n      height: PropTypes.number,\n      widthPct: PropTypes.number,\n      heightPct: PropTypes.number,\n      maxHeight: PropTypes.number,\n      maxWidth: PropTypes.number,\n      minHeight: PropTypes.number,\n      minWidth: PropTypes.number,\n      autoHeight: PropTypes.bool,\n      autoWidth: PropTypes.bool,\n    };\n  }\n\n  static get borders() {\n    return {\n      borderColor: PropTypes.string,\n      borderWidth: PropTypes.number,\n      borderRadius: PropTypes.number,\n      topBorder: PropTypes.bool,\n      leftBorder: PropTypes.bool,\n      bottomBorder: PropTypes.bool,\n      rightBorder: PropTypes.bool,\n      allBorder: PropTypes.bool,\n    };\n  }\n\n  static get text() {\n    return {\n      fontWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900, 'normal', 'bold', 'bolder', 'lighter']),\n      lineHeight: PropTypes.number,\n      fontSize: PropTypes.number,\n      color: PropTypes.string,\n    };\n  }\n\n  static get links() {\n    return {\n      href: PropTypes.string,\n      target: PropTypes.string,\n    };\n  }\n\n  static get style() {\n    return {\n      style: stylePropType,\n    };\n  }\n\n  static get loggings() {\n    return {\n      logDescription: PropTypes.string,\n      logClick: PropTypes.bool,\n      logExtra: PropTypes.object,\n    };\n  }\n\n  static setDimensions(style, props) {\n    if (props.widthPct) {\n      style = {...style, width: String(props.widthPct) + '%'};\n    }\n    if (props.width) {\n      style = {...style, width: props.width};\n    }\n    if (props.heightPct) {\n      style = {...style, height: String(props.heightPct) + '%'};\n    }\n    if (props.height) {\n      style = {...style, height: props.height};\n    }\n    if (props.autoHeight) {\n      style = {...style, height: 'auto'};\n    }\n    if (props.autoWidth) {\n      style = {...style, width: 'auto'};\n    }\n    if (props.maxHeight) {\n      style = {...style, maxHeight: props.maxHeight};\n    }\n    if (props.maxWidth) {\n      style = {...style, maxWidth: props.maxWidth};\n    }\n    if (props.minHeight) {\n      style = {...style, minHeight: props.minHeight};\n    }\n    if (props.minWidth) {\n      style = {...style, minWidth: props.minWidth};\n    }\n    return style;\n  }\n\n  static setPaddings(style, props) {\n    if (props.paddingAll) {\n      style = {...style, paddingTop: props.paddingAll};\n      style = {...style, paddingLeft: props.paddingAll};\n      style = {...style, paddingBottom: props.paddingAll};\n      style = {...style, paddingRight: props.paddingAll};\n    }\n    if (props.paddingVertical) {\n      style = {...style, paddingTop: props.paddingVertical};\n      style = {...style, paddingBottom: props.paddingVertical};\n    }\n    if (props.paddingHorizontal) {\n      style = {...style, paddingLeft: props.paddingHorizontal};\n      style = {...style, paddingRight: props.paddingHorizontal};\n    }\n    if (props.paddingTop) {\n      style = {...style, paddingTop: props.paddingTop};\n    }\n    if (props.paddingLeft) {\n      style = {...style, paddingLeft: props.paddingLeft};\n    }\n    if (props.paddingBottom) {\n      style = {...style, paddingBottom: props.paddingBottom};\n    }\n    if (props.paddingRight) {\n      style = {...style, paddingRight: props.paddingRight};\n    }\n    return style;\n  }\n\n  static setMargins(style, props) {\n    if (props.marginAll) {\n      style = {...style, marginTop: props.marginAll};\n      style = {...style, marginLeft: props.marginAll};\n      style = {...style, marginBottom: props.marginAll};\n      style = {...style, marginRight: props.marginAll};\n    }\n    if (props.marginVertical) {\n      style = {...style, marginTop: props.marginVertical};\n      style = {...style, marginBottom: props.marginVertical};\n    }\n    if (props.marginHorizontal) {\n      style = {...style, marginLeft: props.marginHorizontal};\n      style = {...style, marginRight: props.marginHorizontal};\n    }\n    if (props.marginTop) {\n      style = {...style, marginTop: props.marginTop};\n    }\n    if (props.marginLeft) {\n      style = {...style, marginLeft: props.marginLeft};\n    }\n    if (props.marginBottom) {\n      style = {...style, marginBottom: props.marginBottom};\n    }\n    if (props.marginRight) {\n      style = {...style, marginRight: props.marginRight};\n    }\n    if (props.autoMarginTop) {\n      style = {...style, marginTop: 'auto'};\n    }\n    if (props.autoMarginLeft) {\n      style = {...style, marginLeft: 'auto'};\n    }\n    if (props.autoMarginBottom) {\n      style = {...style, marginBottom: 'auto'};\n    }\n    if (props.autoMarginRight) {\n      style = {...style, marginRight: 'auto'};\n    }\n    return style;\n  }\n\n  static setBorders(style, props) {\n    const {topBorder, leftBorder, bottomBorder, rightBorder, allBorder} = props;\n    let hasBorder = topBorder || leftBorder || bottomBorder || rightBorder || allBorder;\n    if (!hasBorder) {\n      return style;\n    }\n\n    let borderColor = props.borderColor || CSSColor.GRAY_20;\n    let borderWidth = props.borderWidth || 1;\n    let borderRadius = props.borderRadius || 0;\n    style = {\n      ...style,\n      borderColor: borderColor,\n      borderWidth: borderWidth,\n      borderRadius: borderRadius,\n    };\n    if (topBorder) {\n      style = {...style, borderTopStyle: 'solid'};\n    }\n    if (leftBorder) {\n      style = {...style, borderLeftStyle: 'solid'};\n    }\n    if (bottomBorder) {\n      style = {...style, borderBottomStyle: 'solid'};\n    }\n    if (rightBorder) {\n      style = {...style, borderRightStyle: 'solid'};\n    }\n    if (allBorder) {\n      style = {...style, borderStyle: 'solid'};\n    }\n    return style;\n  }\n\n  static setTextStyleOrDefault(style, props) {\n    let fontSize = props.fontSize ? String(props.fontSize) + 'pt' : null;\n    let fontColor = CSSColor.PRIMARY_TEXT;\n    if (props.color) {\n      if (props.color === 'secondary') {\n        fontColor = CSSColor.SECONDARY_TEXT;\n      } else if (props.color === 'primary') {\n        fontColor = CSSColor.PRIMARY_TEXT;\n      } else {\n        fontColor = props.color;\n      }\n    }\n\n    return {\n      ...style,\n      fontWeight: props.fontWeight || 400,\n      fontSize: fontSize || '12pt',\n      lineHeight: props.lineHeight || 1.2,\n      color: fontColor,\n    };\n  }\n\n  static setTextStyle(style, props) {\n    if (props.fontWeight) {\n      style = {...style, fontWeight: props.fontWeight};\n    }\n    if (props.fontSize) {\n      style = {...style, fontSize: props.fontSize};\n    }\n    if (props.lineHeight) {\n      style = {...style, lineHeight: props.lineHeight};\n    }\n    if (props.color) {\n      if (props.color === 'primary') {\n        style = {...style, color: CSSColor.PRIMARY_TEXT};\n      } else if (props.color === 'secondary') {\n        style = {...style, color: CSSColor.SECONDARY_TEXT}\n      } else {\n        style = {...style, color: props.color};\n      }\n    }\n    return style;\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Flexbox extends React.Component {\n  onClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  render() {\n    let style = {\n      display: 'flex',\n      flexDirection: this.props.flexDirection || 'column',\n      flexWrap: this.props.flexWrap || 'nowrap',\n      flexGrow: this.props.flexGrow || 0,\n      flexShrink: this.props.flexShrink || 1,\n      flexBasis: this.props.flexBasis || 'auto',\n      justifyContent: this.props.justifyContent || 'flex-start',\n      alignSelf: this.props.alignSelf || 'auto',\n      alignItems: this.props.alignItems || 'flex-start',\n      backgroundColor: this.props.backgroundColor,\n      wordWrap: 'break-word',\n    };\n    if (this.props.hidden) {\n      style = {...style, display: 'none'};\n    }\n\n    style = CommonProps.setPaddings(style, this.props);\n    style = CommonProps.setMargins(style, this.props);\n    style = CommonProps.setDimensions(style, this.props);\n    style = CommonProps.setBorders(style, this.props);\n\n    if (this.props.href) {\n      // Use <a> as a flexbox to make the whole box hyperlinked\n      return (\n        <a className={`hyperlink ${this.props.className}`}\n           target={this.props.target} rel=\"noopener noreferrer\"\n           onClick={this.onClick}\n           style={{...style, ...this.props.style}} href={this.props.href}>\n          {this.props.children}\n        </a>\n      );\n    }\n\n    return (\n      <div className={this.props.className} onClick={this.onClick}\n           style={{...style, ...this.props.style}}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nFlexbox.propTypes = {\n  flexDirection: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  flexWrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  flexGrow: PropTypes.number,\n  flexShrink: PropTypes.number,\n  flexBasis: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  ...CommonProps.alignments,\n  ...CommonProps.paddings,\n  ...CommonProps.margins,\n  ...CommonProps.dimensions,\n  ...CommonProps.borders,\n  ...CommonProps.links,\n\n  hidden: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n\n  ...CommonProps.style,\n};\n\n\nexport default Flexbox;","import Flexbox from './Flexbox';\n\nexport default Flexbox;","import CSSColor from '../../../constants/CSSColor';\n\n\nconst style = {\n  navbar: {\n    backgroundColor: CSSColor.BLACK_ALPHA_80,\n  }\n};\n\nexport default style;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Text extends React.Component {\n  onClick = () => {\n    if (!this.props.logClick || !this.props.href) {\n      return;\n    }\n\n    let logData = {\n      action: 'visit_href',\n      href: this.props.href,\n    };\n    if (this.props.logDescription) {\n      logData = {...logData, description: this.props.logDescription};\n    }\n    if (this.props.logExtra) {\n      logData = {...logData, extra: this.props.logExtra};\n    }\n\n    // If there is an href, then log\n    Logger.genLog(logData);\n  };\n\n  render() {\n    let style = {};\n    style = CommonProps.setTextStyleOrDefault(style, this.props);\n    style = {...style, ...this.props.style};\n\n    let cls = [this.props.className, \"text\"];\n    if (this.props.buttonFont) {\n      cls.push(\"btnFont\");\n    } else {\n      cls.push(\"stdFont\");\n    }\n    cls = cls.join(' ');\n\n    let headingComponent = null;\n    switch (this.props.heading) {\n      case 1:\n        headingComponent = (\n          <h1 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h1>\n        );\n        break;\n      case 2:\n        headingComponent = (\n          <h2 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h2>\n        );\n        break;\n      case 3:\n        headingComponent = (\n          <h3 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h3>\n        );\n        break;\n      case 4:\n        headingComponent = (\n          <h4 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h4>\n        );\n        break;\n      case 5:\n        headingComponent = (\n          <h5 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h5>\n        );\n        break;\n      case 6:\n        headingComponent = (\n          <h6 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h6>\n        );\n        break;\n      default:\n        headingComponent = (\n          <h1 className={cls} style={style}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h1>\n        );\n    }\n\n    return (\n      <div onClick={this.props.onClick}>\n        {headingComponent}\n      </div>\n    );\n  }\n}\n\nText.propTypes = {\n  className: PropTypes.string,\n  heading: PropTypes.oneOf([1, 2, 3, 4, 5, 6]),\n\n  ...CommonProps.links,\n  ...CommonProps.text,\n  ...CommonProps.loggings,\n\n  buttonFont: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: function (props, propName, componentName) {\n    let errorsCount = 0;\n    React.Children.forEach(props.children, function (e) {\n      if (typeof (e) !== 'string') {\n        errorsCount++;\n      }\n    });\n\n    if (errorsCount > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should have children of the following types: ' +\n        ' `string`.'\n      );\n    }\n  },\n  ...CommonProps.style,\n};\n\n\nexport default Text;","import Text from './Text';\nexport default Text;","import Button from './Button';\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport Text from \"../../components/Text\";\nimport './style.css';\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\nclass Button extends React.Component {\n  onClick = (e) => {\n    if (!this.props.disabled && this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  render() {\n    const {\n      fontSize,\n      fontWeight,\n      label,\n      lineHeight,\n      href,\n      target,\n      style,\n      paddingVertical,\n      paddingHorizontal,\n      borderRadius,\n      borderColor,\n      borderWidth,\n      topBorder,\n      leftBorder,\n      bottomBorder,\n      rightBorder,\n      allBorder,\n      backgroundColor,\n      color,\n      logDescription,\n      logClick,\n      disabled,\n      disabledBackgroundColor,\n      disabledColor,\n      disabledBorderColor,\n    } = this.props;\n    let textColorStyle = {\n      color: (disabled ? disabledColor : color) || CSSColor.GRAY_100\n    };\n\n    return (\n      <Flexbox className=\"btnHover cursorPointer\"\n               href={disabled ? null : href}\n               target={target}\n               onClick={this.onClick}\n               style={style}\n               paddingVertical={paddingVertical}\n               paddingHorizontal={paddingHorizontal}\n               borderRadius={borderRadius}\n               borderColor={disabled ? disabledBorderColor : borderColor}\n               borderWidth={borderWidth}\n               topBorder={topBorder}\n               leftBorder={leftBorder}\n               bottomBorder={bottomBorder}\n               rightBorder={rightBorder}\n               allBorder={allBorder}\n               backgroundColor={disabled ? disabledBackgroundColor : backgroundColor}>\n        <Text className=\"unselectable\"\n              fontSize={fontSize || 12}\n              fontWeight={fontWeight || 300}\n              href={disabled ? null : href} target={disabled ? null : target}\n              logClick={!disabled && logClick} lineHeight={lineHeight}\n              logDescription={logDescription} style={textColorStyle}\n              buttonFont>\n          {label}\n        </Text>\n      </Flexbox>\n    );\n  }\n}\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n\n  ...CommonProps.text,\n  ...CommonProps.links,\n  ...CommonProps.paddings,\n  ...CommonProps.borders,\n  ...CommonProps.loggings,\n\n  onClick: PropTypes.func,\n\n  // Disabled props\n  disabled: PropTypes.bool,\n  disabledColor: PropTypes.string,\n  disabledBackgroundColor: PropTypes.string,\n  disabledBorderColor: PropTypes.string,\n  ...CommonProps.style,\n\n};\n\nexport default Button;","import NavbarUnit from './NavbarUnit';\nexport default NavbarUnit;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport '../../../constants/common.css';\nimport Flexbox from '../Flexbox';\nimport Button from '../Button';\nimport Text from '../Text';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\n\nclass NavbarUnit extends React.Component {\n  render() {\n    let style = {};\n    if (this.props.position === 'left') {\n      style = {\n        ...style,\n        marginRight: 'auto'\n      };\n    }\n\n    return (\n      <Button {...this.props} style={style} color={CSSColor.WHITE}\n              fontSize={15} paddingHorizontal={this.props.paddingHorizontal || 8}\n              paddingVertical={this.props.paddingVertical}\n              lineHeight={this.props.allBorder ? 0.4 : undefined}\n              borderColor={this.props.borderColor}\n              borderWidth={this.props.borderWidth}\n              borderRadius={this.props.borderRadius}/>\n    );\n  }\n}\n\nNavbarUnit.propTypes = {\n  label: PropTypes.string.isRequired,\n  fontWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900, 'normal', 'bold', 'bolder', 'lighter']),\n  ...CommonProps.links,\n  ...CommonProps.borders,\n\n  color: PropTypes.string,\n  paddingHorizontal: PropTypes.number,\n  paddingVertical: PropTypes.number,\n\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  position: PropTypes.oneOf(['left', 'right']),\n};\n\n\nexport default NavbarUnit;","import Image from './Image';\nexport default Image","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport CommonProps from \"../../common/props\";\n\n\nclass Image extends React.Component {\n  onClick = () => {\n    if (!this.props.logClick || !this.props.href) {\n      return;\n    }\n\n    let logData = {\n      action: 'visit_href',\n      href: this.props.href,\n    };\n    if (this.props.logDescription) {\n      logData = {...logData, description: this.props.logDescription};\n    }\n    if (this.props.logExtra) {\n      logData = {...logData, extra: this.props.logExtra};\n    }\n\n    // If there is an href, then log\n    Logger.genLog(logData);\n  };\n\n  render() {\n    return (\n      <div onClick={this.props.onClick}>\n        <a href={this.props.href} className=\"hyperlink\"\n           onClick={this.onClick} target={this.props.target}>\n          {\n            this.props.width || this.props.height ?\n              <img alt={this.props.alt || ' '} src={this.props.src}\n                   width={this.props.width} height={this.props.height}\n                  className={this.props.className}/> :\n              <img alt={this.props.alt || ' '} src={this.props.src}\n                   className={`img-autosize ${this.props.className}`}/>\n          }\n        </a>\n      </div>\n    );\n  }\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  children: function (props, propName, componentName) {\n    let numChildren = React.Children.count(props.children);\n    if (numChildren > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should not have any children.'\n      );\n    }\n  }\n};\n\n\nexport default Image;","import Icon from './Icon';\nexport default Icon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport Image from \"../Image\";\nimport CommonProps from \"../../common/props\";\n\n\nclass Icon extends React.Component {\n  render() {\n    let size = this.props.size || 32;\n\n    return (\n      <Image {...this.props} width={size} height={size}/>\n    );\n  }\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  size: PropTypes.oneOf([16, 20, 24, 28, 32, 36, 40]),\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func\n};\n\n\nexport default Icon;","import NavbarUnitIcon from './NavbarUnitIcon';\nexport default NavbarUnitIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport '../../../constants/common.css';\nimport Flexbox from '../Flexbox';\nimport Icon from '../Icon';\nimport CommonProps from \"../../common/props\";\n\n\nclass NavbarUnitIcon extends React.Component {\n  render() {\n    let style = {};\n    if (this.props.position === 'left') {\n      style = {...style, marginRight: 'auto'};\n    }\n\n    return (\n      <Flexbox className=\"navbarUnitIcon\" onClick={this.props.onClick}\n               style={style} alignItems=\"center\" justifyContent=\"center\">\n        <Icon className=\"btnHover\"\n              href={this.props.href} target={this.props.target}\n              src={this.props.src} size={28}\n              logDescription={this.props.logDescription}\n              logClick={this.props.logClick}/>\n      </Flexbox>\n    );\n  }\n}\n\nNavbarUnitIcon.propTypes = {\n  src: PropTypes.string,\n  size: PropTypes.oneOf([16, 20, 24, 28, 32, 36, 40]),\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  position: PropTypes.oneOf(['left', 'right']),\n};\n\n\nexport default NavbarUnitIcon;","import Navbar from './Navbar';\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style';\nimport NavbarUnit from '../NavbarUnit';\nimport Flexbox from '../Flexbox';\nimport NavbarUnitIcon from \"../NavbarUnitIcon\";\nimport './style.css';\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Navbar extends React.Component {\n  render() {\n    let navbarStyle = style.navbar;\n    if (this.props.color) {\n      navbarStyle = {...navbarStyle, backgroundColor: this.props.color};\n    }\n\n    return (\n      <Flexbox className={this.props.blur ? \"navbar navbarBlur\" : \"navbar\"}\n               style={navbarStyle} flexDirection=\"row\"\n               justifyContent=\"flex-end\" alignItems=\"center\">\n        {this.props.children}\n      </Flexbox>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  color: PropTypes.string,\n  blur: PropTypes.bool,\n  style: stylePropType,\n  children: function (props, propName, componentName) {\n    let validTypes = [NavbarUnit.name, NavbarUnitIcon.name];\n    let errorsCount = 0;\n    React.Children.forEach(props.children, function (e) {\n      if (validTypes.indexOf(e.type.name) === -1) {\n        errorsCount++;\n      }\n    });\n\n    if (errorsCount > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should have children of the following types: ' +\n        ' `' + validTypes.join(',') + '`.'\n      );\n    }\n  }\n};\n\n\nexport default Navbar;","const profile = {\n  \"aboutMe\": {\n    \"heading\": \"Hello, My name is Daniel!\",\n    \"text\": \"I'm an incoming Senior at UC San Diego studying Computer Science with \" +\n      \"a minor in Math. I'm currently interning at Facebook as a Software Engineer \" +\n      \"working on the Facebook Events product.\\n\\n\" +\n      \"My primary interests are in Computer Networks and Security and I hope to \" +\n      \"be able to work in the field some day. In my free time, I develop mobile apps \" +\n      \"and websites such as my portfolio since I find it very enjoyable to create \" +\n      \"something that you could directly experience.\\n\\n\" +\n      \"What I look for in a job is the ability to make an impact. I'm motivated \" +\n      \"by the fact that I could create something that can bring benefits to \" +\n      \"the society. I will be graduating in June 2020 and looking toward a full time \" +\n      \"opportunities in Software Engineering.\",\n  },\n  \"workExperience\":  {\n    objs: {\n      0: {\n        name: \"Facebook\",\n        title: \"Software Engineering Intern\",\n        date: \"June 2019 - September 2019\",\n        description: \"Working on the Events Distribution team.\",\n        techUsed: \"Python, Presto/Hive\",\n        logo: \"assets/facebook_logo_text.png\"\n      },\n      1: {\n        name: \"Teradata\",\n        title: \"Software Engineering Intern\",\n        date: \"June 2018 - September 2018\",\n        description: \"Created a dashboard that displays metrics such as Memory Usage, Paging Activity, Jenkins Jobs’ \" +\n          \"statuses, and active docker containers.\\n\\n\" +\n          \"Wrote API integration tests for Cloud features (Teradata's Customer Database Console) to ensure quality of \" +\n          \"Production application. These features include but not limited to changing instance types, scaling the number of \" +\n          \"EC2 instances, and expanding storage.\\n\\n\" +\n          \"Wrote Bash script for sanity check and automatic Jenkins build deployment and running when a PR is merged.\\n\\n\" +\n          \"Used Terraform to deploy an AutoTag system (open source project) to tag AWS resources created with the owner’s\" +\n          \"names.\\n\\n\" +\n          \"Wrote an add-on to the open source project for listening to AWS Cloud Trail’s logs for Lambda Create event in \" +\n          \"order to tag the Lambda function upon creation.\\n\",\n        techUsed: \"Ruby Sinatra, Dashing, Docker, REST, Jenkins, Prometheus, AWS\\n\",\n        logo: \"assets/teradata_logo_text.png\"\n      },\n    },\n    heading: \"Work Experience\",\n    text: \"I've been fortunate to have interned at two companies during my \" +\n      \"time in college. These internships have helped me tremendously in \" +\n      \"progressing my industry experience.\\n\" +\n      \"Click on the logos to find more about my experience.\"\n  },\n  \"projects\": {\n    objs: {\n      0: {\n        title: \"Code Style Linter\",\n        shortDesc: \"A style linter for C and ARM Assembly files.\",\n        longDesc: \"The style linter is capable of checking many things ranging from indentations, \\\"Magic\\\" numbers, lines\" +\n          \" over 80 characters, and some more. \\n\\n I developed this to make my life easier grading students' \" +\n          \"programming assignments, where I had to check if their code followed the style guidelines.\",\n        techUsed: \"Python\",\n        repo: \"https://github.com/hnguyen0428/style_checker\",\n      },\n      1: {\n        title: \"CodeSnippler\",\n        shortDesc: \"A website for quickly looking up common code snippets in \" +\n          \"order to assist with the developing process.\",\n        longDesc: \"I developed the back end using Spring, which hosts a REST service that acts as a proxy between the front end \" +\n          \"and the database. The Spring server handles everything from CRUD operations to complex queries such as those \" +\n          \"used to query the popular snippets.\\n\\n\" +\n          \"The front end is a web application, which is made using React. It allows users to do things such as creating \" +\n          \"code snippets, saving code snippets for future lookups, and filtering the languages that they see in their \" +\n          \"feed.\",\n        techUsed: \"React Spring MongoDB\",\n        repo: \"https://github.com/hnguyen0428/code-snippler\",\n      },\n      2: {\n        title: \"GroupPlanner\",\n        shortDesc: \"An iOS application that helps you find the appropriate time to hang out with your \" +\n          \"friends.\",\n        longDesc: \"GroupPlanner is an iOS application created as part of the CodePath bootcamp \" +\n          \"project. The app uses Google Calendar API in order to pull users' events and overlay them on top of a calendar \" +\n          \"view.\\n\\n\" +\n          \"I also implemented an algorithm that would calculate available times of all users' in a group and display \" +\n          \"them to make it easier for users to know when their friends are free.\\n\\n\" +\n          \"Won CodePath Best in Show and Best App Idea award.\",\n        techUsed: \"Swift OAuth Parse\",\n        repo: \"https://github.com/hecs-software/group-planner\",\n      },\n      3: {\n        title: \"GuitarTuner\",\n        shortDesc: \"An iOS application that can be used to tune the guitar.\",\n        longDesc: \"GuitarTuner was developed as a tool to help users tune their guitar with more than \" +\n          \"just the standard tuning.\\n\\n\" +\n          \"I used Apple's Accelerate framework to perform Fast Fourier Transform along with applying a second-order filter \" +\n          \"on the audio signal captured by the phone in order to determine the frequency of the note being played.\\n\",\n        techUsed: \"Swift\",\n        repo: \"https://github.com/hnguyen0428/GuitarTuner\",\n      },\n    },\n    heading: \"Some Projects I've Worked On\",\n    text: \"These are the projects I've created in my free time while in college. \" +\n      \"I had a lot of fun developing these projects and it is mainly through these projects \" +\n      \"that I've initially gained the knowledge required for industry work.\",\n  },\n  \"education\": {\n    \"school\": \"UC San Diego\",\n    \"major\": \"BS Computer Science\",\n    \"gradDate\": \"2020\",\n    \"gpa\": \"3.78\",\n    \"organizations\": \"Eta Kappa Nu, Computer Science Engineering Society\",\n    \"description\": \"At UC San Diego, I serve as a tutor for the CSE department. \" +\n      \"My responsibility includes grading assignments, holding lab hours to help students debug \" +\n      \"their programming assignments, and holding quiz reviews and discussions. \" +\n      \"I have tutored for CSE 11: Intro to Object Oriented Programming, and CSE 30: Systems \" +\n      \"Programming (using C and ARM Assembly).\",\n    \"courses\": [\n      {\n        \"courseName\": \"Computer Networks\",\n        \"courseDesc\": \"Course covers topics on computer networks architecture, current internet \" +\n          \"standards, routing and congestion controls, and transport protocols.\\n\" +\n          \"Projects include creating a Sliding-Window-Protocol in order to send and receive packets with \" +\n          \"error detection, and creating a router, which handles receiving packets and forwarding packets to their \" +\n          \"destinations.\"\n      },\n      {\n        \"courseName\": \"Computer Security\",\n        \"courseDesc\": \"Course covers topics on computer security such as low-level software security, \" +\n          \"cryptography, web security, networks security, hardware security, side channels, and computer \" +\n          \"virus/malware.\\n\" +\n          \"Two major projects include replicating a buffer overflow exploit and a man-in-the-middle attack \" +\n          \"that injects iframes into http packets.\"\n      },\n      {\n        \"courseName\": \"Computer Vision\",\n        \"courseDesc\": \"Course covers topics in computer vision such as photometric stereo, binary image \" +\n          \"processing, image filtering, edge detection, and object tracking.\"\n      },\n      {\n        \"courseName\": \"Deep Learning\",\n        \"courseDesc\": \"Course covers neural networks topics such as perceptron learning, vanilla neural \" +\n          \"networks, convolutional neural networks, recurrent neural networks, reinforcement learning and \" +\n          \"generative adversarial networks. It also covers machine learning techniques such as \" +\n          \"gradient descent, regressions, and maximum likelihood.\\n\" +\n          \"One of the projects I did was creating a CNN that trains on a set of Xray data in order to \" +\n          \"classify what diseases the patient has. Another project is where I created a recurrent neural \" +\n          \"network (LSTM to be specific) and trains it on a beer reviews dataset in order to then generate \" +\n          \"similar beer reviews based on a given rating and beer category.\\n\" +\n          \"These two projects were done using PyTorch.\"\n      },\n      {\n        \"courseName\": \"Digital Systems Laboratory\",\n        \"courseDesc\": \"Course covers programming system simulations using Verilog.\"\n      },\n      {\n        \"courseName\": \"Natural Language Processing\",\n        \"courseDesc\": \"Course covers NLP topics such as language semantics, text prediction, smoothing \" +\n          \"techniques (Katz Backoff, Kneser-Ney), sentiment classification with logistic regression, machine \" +\n          \"translation using IBM model.\\n\" +\n          \"Projects include designing an n-gram probabilistic text generation model, a sentiment classification \" +\n          \"model of Yelp reviews, Gene sequence tagging using Hidden Markov Model, and alignment model between \" +\n          \"English and Spanish text.\"\n      },\n      {\n        \"courseName\": \"Object Oriented Programming\",\n        \"courseDesc\": \"Course covers OOP concepts in Java.\"\n      },\n      {\n        \"courseName\": \"Programming Languages Paradigm\",\n        \"courseDesc\": \"Course covers functional programming using Haskell. Projects include developing a \" +\n          \"fully functional language, which involves creating a Lexer, Parser, and an interpreter.\"\n      },\n      {\n        \"courseName\": \"Recommenders System\",\n        \"courseDesc\": \"Course covers basic machine learning methods such as Linear Regression, Logistic \" +\n          \"Regression, SVM, and also various techniques on how to design recommender systems\\n\" +\n          \"Projects include designing rating model, category prediction model, and purchase prediction model \" +\n          \"using sklearn library.\"\n      },\n      {\n        \"courseName\": \"Software Engineering\",\n        \"courseDesc\": \"Course covers software engineering design patterns and best practices. We also worked on \" +\n          \"a quarter-long project, working in a group of 10 people following Agile development.\"\n      },\n      {\n        \"courseName\": \"Systems Programming\",\n        \"courseDesc\": \"Course covers low-level C and Assembly programming in ARM architecture.\"\n      },\n    ]\n  },\n  \"resumeLink\": \"https://drive.google.com/open?id=1jxLAQ1ZC5Ie_IHezqILVmoj9YjOW2YuJ\",\n  \"fbLink\": \"https://www.facebook.com/hnguyen0428\",\n  \"githubLink\": \"https://github.com/hnguyen0428?tab=repositories\",\n  \"linkedinLink\": \"https://www.linkedin.com/in/hnguyen0428\",\n  \"profileImage\": \"assets/profile_picture.jpg\",\n  \"email\": \"hnguyen0428@gmail.com\",\n};\n\nexport default profile;","import CSSColor from \"../constants/CSSColor\";\n\nconst style = {\n  root: {\n    width: '100%',\n  }\n};\n\nexport default style;","import ProfileImage from './ProfileImage';\nexport default ProfileImage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from '../Image';\nimport './style.css';\n\n\nclass ProfileImage extends React.Component {\n  render() {\n    let {src, alt, size, circular, href, target, onClick} = this.props;\n    size = size || 256;\n    return (\n      <Image src={src} alt={alt} width={size} height={size} href={href}\n             target={target} onClick={onClick}\n             className={circular ? \"circular\" : null}/>\n    );\n  }\n}\n\nProfileImage.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  size: PropTypes.number,\n  circular: PropTypes.bool,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  onClick: PropTypes.func\n};\n\n\nexport default ProfileImage;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Flexbox from '../Flexbox';\nimport '../Text/style.css';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\nimport Text from \"../Text\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass TextInput extends React.Component {\n  onChange = (e) => {\n    let value = e.target.value;\n    if (this.props.onChange) {\n      this.props.onChange(e, value);\n    }\n  };\n\n  render() {\n    let style = {};\n    style = CommonProps.setTextStyleOrDefault(style, this.props);\n    style = CommonProps.setDimensions(style, this.props);\n    if (!this.props.textarea && style.height === undefined) {\n      style = this.props.textarea ? style : {...style, height: style.fontSize};\n    }\n    style = {...style, ...this.props.style};\n\n    let labelComponent =\n      this.props.label ?\n        <Text color=\"secondary\" fontSize={10}\n              lineHeight={0.2}>{this.props.label}</Text>\n        : null;\n\n    if (this.props.textarea) {\n      return (\n        <Flexbox widthPct={100} heightPct={this.props.fillHeight ? 100 : null}>\n          {labelComponent}\n          <textarea style={style} className=\"text-input stdFont\"\n                    onChange={this.onChange} rows={this.props.rows || 5}\n                    placeholder={this.props.placeholder}\n                    disabled={this.props.disabled}\n                    readOnly={this.props.readOnly}\n                    value={this.props.value}/>\n        </Flexbox>\n      );\n    } else {\n      return (\n        <Flexbox widthPct={100} heightPct={this.props.fillHeight ? 100 : null}>\n          {labelComponent}\n          <input style={style} className=\"text-input stdFont\"\n                 onChange={this.onChange} placeholder={this.props.placeholder}\n                 disabled={this.props.disabled} pattern={this.props.pattern}\n                 readOnly={this.props.readOnly} type={this.props.type}\n                 value={this.props.value}\n                 autoComplete={this.props.autoComplete}/>\n        </Flexbox>\n      );\n    }\n  }\n}\n\nTextInput.propTypes = {\n  ...CommonProps.style,\n  value: PropTypes.string,\n\n  ...CommonProps.text,\n  // Dimension applies to text area only\n  ...CommonProps.dimensions,\n\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  pattern: PropTypes.string,\n  readOnly: PropTypes.bool,\n  inputSize: PropTypes.number,\n  autoComplete: PropTypes.string,\n\n  fillHeight: PropTypes.bool, // Fill 100% height of parent div\n  type: PropTypes.oneOf(['password', 'email', 'text', 'number']),\n  textarea: PropTypes.bool,\n\n  rows: PropTypes.number, // Number of rows of textarea\n  onChange: PropTypes.func, // (event, value) ==> {}\n};\n\nexport default TextInput;","import TextInput from './TextInput';\nexport default TextInput;","import { createHashHistory } from 'history';\nexport default createHashHistory({});","import AboutMe from './AboutMe';\nexport default AboutMe;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport ProfileImage from \"../../components/ProfileImage\";\nimport profile from \"../../../static/Profile\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport {fetchProfileText, updateProfileText} from \"../../../firebase/profile\";\nimport TextInput from \"../../components/TextInput\";\nimport {getEditMode} from \"../../common/utils\";\nimport {fetchLoginState} from \"../../../firebase/auth\";\n\nclass AboutMe extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let heading = profile.aboutMe.heading;\n    let text = profile.aboutMe.text;\n    this.state = {\n      heading: heading,\n      text: text,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateProfileText(this.state.heading, this.state.text, () => {\n\n    }, (error) => {\n      alert('Error updating about me section.');\n    });\n  };\n\n  componentWillMount() {\n    fetchProfileText((obj) => {\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64}>\n        <Flexbox className=\"overflow-wrap\"\n                 width={1100}\n                 flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox paddingHorizontal={32} alignItems=\"center\">\n            <ProfileImage src={profile.profileImage} size={350} circular/>\n            <Flexbox marginTop={16}>\n              <Button label={\"Email Me!\"} allBorder borderRadius={2}\n                      paddingHorizontal={12} paddingVertical={4}\n                      color={CSSColor.GRAY_80} fontWeight={500}\n                      backgroundColor={CSSColor.LIGHT_WHITE}\n                      borderColor={CSSColor.BLACK_ALPHA_60} borderWidth={2}\n                      href={`mailto: ${profile.email}`}/>\n            </Flexbox>\n          </Flexbox>\n          <Flexbox flexDirection=\"column\" flexGrow={1}>\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={1}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={15}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          this.props.allowEdit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update About Me\" fontSize={18} fontWeight={500}\n                      borderColor={CSSColor.BLACK_ALPHA_60} borderWidth={2}\n                      borderRadius={6} paddingHorizontal={12} allBorder\n                      lineHeight={0.8} onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nAboutMe.propTypes = {\n  allowEdit: PropTypes.bool,\n};\n\nexport default AboutMe;","import {database} from '../config/firebase';\n\nexport function updateProfileText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/aboutMe/heading\"] = heading;\n  updates[\"/profile/aboutMe/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchProfileText(onSuccess, onFailure) {\n  let cached = sessionStorage.getItem(\"/profile/aboutMe\");\n  if (cached) {\n    if (onSuccess) {\n      onSuccess(JSON.parse(cached));\n    }\n    return;\n  }\n  database.ref(\"/profile/aboutMe\").once('value')\n    .then((snap) => {\n      let obj = snap.val();\n      if (onSuccess) {\n        onSuccess(snap.val());\n      }\n      sessionStorage.setItem(\"/profile/aboutMe\", JSON.stringify(obj));\n    })\n    .catch(onFailure);\n}\n\nexport function updateWorkExperienceText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/workExperience/heading\"] = heading;\n  updates[\"/profile/workExperience/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchWorkExperienceText(onSuccess, onFailure) {\n  let cached = sessionStorage.getItem(\"/profile/workExperience\");\n  if (cached) {\n    if (onSuccess) {\n      onSuccess(JSON.parse(cached));\n    }\n    return;\n  }\n  database.ref(\"/profile/workExperience\").once('value')\n    .then((snap) => {\n      let obj = snap.val();\n      if (onSuccess) {\n        onSuccess(obj);\n      }\n      sessionStorage.setItem(\"/profile/workExperience\", JSON.stringify(obj));\n    })\n    .catch(onFailure);\n}\n\nexport function updateWorkExperienceContent(content, key, onSuccess, onFailure) {\n  if (key === null || key === undefined) {\n    return;\n  }\n  let updates = {};\n  updates[`/profile/workExperience/objs/${key}`] = content;\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function updateProjectsText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/projects/heading\"] = heading;\n  updates[\"/profile/projects/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchProjectsText(onSuccess, onFailure) {\n  let cached = sessionStorage.getItem(\"/profile/projects\");\n  if (cached) {\n    if (onSuccess) {\n      onSuccess(JSON.parse(cached));\n    }\n    return;\n  }\n\n  database.ref(\"/profile/projects\").once('value')\n    .then((snap) => {\n      let obj = snap.val();\n      if (onSuccess) {\n        onSuccess(obj);\n      }\n      sessionStorage.setItem(\"/profile/projects\", JSON.stringify(obj));\n    })\n    .catch(onFailure);\n}\n\nexport function updateProjectContent(content, key, onSuccess, onFailure) {\n  if (key === null || key === undefined) {\n    return;\n  }\n  let updates = {};\n  updates[`/profile/projects/objs/${key}`] = content;\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}","import Card from './Card';\nexport default Card;","import React from 'react';\nimport Flexbox from '../Flexbox';\nimport './style.css';\nimport PropTypes from 'prop-types';\n\n\nclass Card extends React.Component {\n  render() {\n    let cls = this.props.className;\n    if (cls) {\n      cls += \" card\";\n    } else {\n      cls = \"card\";\n    }\n\n    return (\n      <Flexbox {...this.props} className={cls} style={{\n        ...this.props.style,\n        borderRadius: this.props.borderRadius || 4\n      }}>\n        {this.props.children}\n      </Flexbox>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...Flexbox.propTypes,\n  borderRadius: PropTypes.number,\n};\n\n\nexport default Card;","import Modal from './Modal';\nexport default Modal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Flexbox from '../Flexbox';\nimport Card from '../Card';\nimport Text from '../Text';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\n\n\nclass Modal extends React.Component {\n  static get modalSizes() {\n    return {\n      small: {\n        width: 360,\n        height: 240,\n      },\n      medium: {\n        width: 480,\n        height: 360,\n      },\n      large: {\n        width: 640,\n        height: 480,\n      },\n    };\n  }\n\n  onClickModal = (e) => {\n    e.stopPropagation();\n  };\n\n  render() {\n    let size = this.props.size || 'medium';\n    size = Modal.modalSizes[size];\n\n    let shouldShow = this.props.show !== null ? this.props.show : false;\n    let cls = [\"modal\", shouldShow ? \"modal-visible\" : \"modal-hidden\", \"modal-blur\"];\n    cls = cls.join(' ');\n\n    return (\n      <Flexbox className={cls} justifyContent=\"center\" alignItems=\"center\"\n               onClick={this.props.onBackdropClick}>\n        <Card backgroundColor={CSSColor.GRAY_05}\n              style={{width: 'auto', height: 'auto'}}\n              maxWidth={640} maxHeight={480}\n              minWidth={size.width} minHeight={size.height}\n              flexShrink={0} onClick={this.onClickModal}\n              paddingAll={24}>\n          {this.props.children}\n        </Card>\n      </Flexbox>\n    );\n  }\n}\n\nModal.propTypes = {\n  backgroundColor: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  show: PropTypes.bool,\n  onBackdropClick: PropTypes.func,\n};\n\n\nexport default Modal;","import HeaderText from './HeaderText';\nexport default HeaderText;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Flexbox from \"../Flexbox\";\nimport Text from \"../Text\";\n\n\nclass HeaderText extends React.Component {\n  render() {\n    let titleSize = this.props.titleSize || 15;\n    let subtitleSize = this.props.subtitleSize || 15;\n\n    switch (this.props.type) {\n      case 'title_below':\n        return (\n          <Flexbox>\n            {\n              this.props.subtitle ?\n                <Text lineHeight={0.2} size={subtitleSize}\n                      color=\"secondary\">{this.props.subtitle}</Text> :\n                null\n            }\n            <Text fontWeight=\"bold\" size={titleSize}\n                  lineHeight={0.4}>{this.props.title}</Text>\n          </Flexbox>\n        );\n      case 'title_above':\n      default:\n        return (\n          <Flexbox>\n            <Text fontWeight=\"bold\" size={titleSize}\n                  lineHeight={0.4}>{this.props.title}</Text>\n            {\n              this.props.subtitle ?\n                <Text lineHeight={0.2} size={subtitleSize}\n                      color=\"secondary\">{this.props.subtitle}</Text> :\n                null\n            }\n          </Flexbox>\n        );\n    }\n  }\n}\n\nHeaderText.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  titleSize: PropTypes.number,\n  subtitleSize: PropTypes.number,\n  type: PropTypes.oneOf(['title_below', 'title_above']),\n};\n\nexport default HeaderText;","import WorkExperienceCard from './WorkExperienceCard';\nexport default WorkExperienceCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../../constants/CSSColor\";\nimport Flexbox from \"../../../components/Flexbox\";\nimport Card from '../../../components/Card';\nimport Button from '../../../components/Button';\nimport Image from '../../../components/Image';\nimport Text from \"../../../components/Text\";\nimport Modal from '../../../components/Modal';\nimport HeaderText from \"../../../components/HeaderText\";\nimport Logger from '../../../../firebase/logger';\nimport './style.css';\nimport TextInput from \"../../../components/TextInput\";\n\n\nclass WorkExperienceCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n    }\n  }\n\n  openModal = () => {\n    this.setState({showModal: true});\n  };\n\n  closeModal = () => {\n    this.setState({showModal: false});\n  };\n\n  onClickCard = (e) => {\n    this.openModal();\n\n    const {name} = this.props.workExpObj;\n\n    // Log\n    Logger.genLog({\n      action: 'click_work_experience_card',\n      description: 'Visited ' + name + ' Card',\n    })\n  };\n\n  onClickDoneButton = (e) => {\n    this.closeModal();\n  };\n\n  onChangeDescription = (e, val) => {\n    if (this.props.onChangeDescription) {\n      this.props.onChangeDescription(e, val, this.props.dbKey);\n    }\n  };\n\n  onChangeTechUsed = (e, val) => {\n    if (this.props.onChangeTechUsed) {\n      this.props.onChangeTechUsed(e, val, this.props.dbKey);\n    }\n  };\n\n  onSave = (e) => {\n    if (this.props.onSave) {\n      this.props.onSave(e, this.props.dbKey);\n    }\n  };\n\n  render() {\n    const {name, title, date, description, techUsed, logo} = this.props.workExpObj;\n    let header = name + ' - ' + title;\n    let subtitle = date;\n    let size = \"small\";\n\n    return (\n      <div>\n        <Modal size=\"medium\" show={this.state.showModal}\n               onBackdropClick={this.closeModal}>\n          <Flexbox heightPct={100} widthPct={100}\n                   minHeight={Modal.modalSizes[size].height}\n                   minWidth={Modal.modalSizes[size].width}>\n            <HeaderText title={header} subtitle={subtitle}/>\n            {\n              this.props.allowEdit ?\n                <TextInput color={CSSColor.MODAL_TEXT} value={description}\n                           textarea minWidth={640} label=\"Description\"\n                           rows={17} onChange={this.onChangeDescription}/> :\n                <Text color={CSSColor.MODAL_TEXT}\n                      fontSize={12}>{description}</Text>\n            }\n\n            <Flexbox widthPct={100} heightPct={100}\n                     justifyContent=\"flex-end\">\n              {\n                this.props.allowEdit ?\n                  <TextInput value={techUsed} fontWeight=\"bold\"\n                             lineHeight={0.4}\n                             onChange={this.onChangeTechUsed}\n                             label=\"Technologies\"/>\n                  :\n                  <Flexbox className=\"btnHover\">\n                    <Text fontWeight={500} lineHeight={0.4}>{techUsed}</Text>\n                  </Flexbox>\n              }\n            </Flexbox>\n\n            <Flexbox widthPct={100} autoMarginTop flexDirection=\"row\"\n                     justifyContent=\"flex-end\">\n              {\n                this.props.allowEdit ?\n                  <Button label=\"Save\" fontSize={14} lineHeight={0.5}\n                          paddingHorizontal={8}\n                          onClick={this.onSave}/> :\n                  null\n              }\n              <Button label=\"Done\" fontSize={14} lineHeight={0.5}\n                      paddingHorizontal={8}\n                      onClick={this.onClickDoneButton}/>\n            </Flexbox>\n          </Flexbox>\n        </Modal>\n        <Card {...this.props} className=\"work-exp-card\"\n              onClick={this.onClickCard}>\n          <Flexbox>\n            <Image src={logo}/>\n          </Flexbox>\n        </Card>\n      </div>\n    );\n  }\n}\n\nWorkExperienceCard.propTypes = {\n  dbKey: PropTypes.string,\n  workExpObj: PropTypes.shape({\n    name: PropTypes.string,\n    title: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    techUsed: PropTypes.string,\n    logo: PropTypes.string,\n  }).isRequired,\n  ...Card.propTypes,\n  allowEdit: PropTypes.bool,\n  onChangeDescription: PropTypes.func,\n  onChangeTechUsed: PropTypes.func,\n  onSave: PropTypes.func,\n};\n\n\nexport default WorkExperienceCard;","import WorkExperience from './WorkExperience';\nexport default WorkExperience;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport profile from \"../../../static/Profile\";\nimport Button from '../../components/Button';\nimport Text from \"../../components/Text\";\nimport WorkExperienceCard from \"./WorkExperienceCard\";\nimport TextInput from \"../../components/TextInput\";\nimport {\n  fetchWorkExperienceText, updateWorkExperienceContent,\n  updateWorkExperienceText\n} from \"../../../firebase/profile\";\n\n\nclass WorkExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let heading = profile.workExperience.heading;\n    let text = profile.workExperience.text;\n    let objs = profile.workExperience.objs;\n    this.state = {\n      heading: heading,\n      text: text,\n      objs: objs,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateWorkExperienceText(this.state.heading, this.state.text, () => {\n\n    }, (error) => {\n      alert('Error updating work experience section.');\n    });\n  };\n\n  componentWillMount() {\n    fetchWorkExperienceText((obj) => {\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n        objs: obj.objs || this.state.objs,\n      });\n    });\n  }\n\n  onChangeDescription = (e, val, dbKey) => {\n    let objs = this.state.objs;\n    objs[dbKey] = {...objs[dbKey], description: val};\n    this.setState({\n      objs: objs,\n    });\n  };\n\n  onChangeTechUsed = (e, val, dbKey) => {\n    let objs = this.state.objs;\n    objs[dbKey] = {...objs[dbKey], techUsed: val};\n    this.setState({\n      objs: objs,\n    });\n  };\n\n  onClickSaveButton = (e, dbKey) => {\n    updateWorkExperienceContent(this.state.objs[dbKey], dbKey, () => {\n    }, (error) => {\n      alert('Error updating work experience card.');\n    });\n  };\n\n  render() {\n    let objs = this.state.objs;\n    let keys = Object.keys(this.state.objs);\n    keys = keys.sort();\n\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64} marginTop={32}>\n        <Flexbox className=\"overflow-wrap\"\n                 width={900} flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox minWidth={300} width={300} marginRight={16}>\n            <Flexbox flexDirection=\"row\"\n                     widthPct={100} bottomBorder>\n              <Button label=\"Internships\" fontSize={14} bottomBorder\n                      borderWidth={2} borderColor={CSSColor.GRAY_70}/>\n            </Flexbox>\n            <Flexbox paddingHorizontal={16} paddingVertical={16}>\n              {\n                keys.map((index) => {\n                  return (\n                    <WorkExperienceCard key={index} dbKey={index}\n                                        marginVertical={12}\n                                        workExpObj={objs[index]}\n                                        borderRadius={1}\n                                        allowEdit={this.props.allowEdit}\n                                        onChangeDescription={this.onChangeDescription}\n                                        onChangeTechUsed={this.onChangeTechUsed}\n                                        onSave={this.onClickSaveButton}/>\n                  );\n                })\n              }\n            </Flexbox>\n          </Flexbox>\n          <Flexbox flexGrow={1} marginLeft={16}>\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={1}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={5}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          this.props.allowEdit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update Work Experience\" fontSize={18}\n                      fontWeight={500} borderColor={CSSColor.BLACK_ALPHA_60}\n                      borderWidth={2} borderRadius={6} paddingHorizontal={12}\n                      allBorder lineHeight={0.8}\n                      onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nWorkExperience.propTypes = {\n  allowEdit: PropTypes.bool,\n};\n\nexport default WorkExperience;","import ProjectCard from './ProjectCard';\nexport default ProjectCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../../constants/CSSColor\";\nimport Flexbox from \"../../../components/Flexbox\";\nimport Card from '../../../components/Card';\nimport Button from '../../../components/Button';\nimport Text from \"../../../components/Text\";\nimport Modal from '../../../components/Modal';\nimport HeaderText from \"../../../components/HeaderText\";\nimport Logger from '../../../../firebase/logger';\nimport './style.css';\nimport Icon from \"../../../components/Icon\";\nimport TextInput from \"../../../components/TextInput\";\n\n\nclass ProjectCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      cls: \"project-card project-card-animation\",\n    }\n  }\n\n  openModal = () => {\n    this.setState({showModal: true});\n  };\n\n  closeModal = () => {\n    this.setState({showModal: false});\n    this.setState({cls: \"project-card project-card-animation\"});\n  };\n\n  onClickCard = (e) => {\n    this.openModal();\n    // Remove the animation in order to prevent the card from showing on top\n    // of modal\n    this.setState({cls: \"project-card\"});\n\n    const {title} = this.props.projectObj;\n\n    // Log\n    Logger.genLog({\n      action: 'click_project_card',\n      description: 'Visited ' + title + ' Card',\n    })\n  };\n\n  onClickDoneButton = (e) => {\n    this.closeModal();\n  };\n\n  onClickRepoButton = (e) => {\n    e.stopPropagation();\n  };\n\n  onChangeLongDesc = (e, val) => {\n    if (this.props.onChangeLongDesc) {\n      this.props.onChangeLongDesc(e, val, this.props.dbKey);\n    }\n  };\n\n  onChangeShortDesc = (e, val) => {\n    if (this.props.onChangeShortDesc) {\n      this.props.onChangeShortDesc(e, val, this.props.dbKey);\n    }\n  };\n\n  onChangeTechUsed = (e, val) => {\n    if (this.props.onChangeTechUsed) {\n      this.props.onChangeTechUsed(e, val, this.props.dbKey);\n    }\n  };\n\n  onSave = (e) => {\n    if (this.props.onSave) {\n      this.props.onSave(e, this.props.dbKey);\n    }\n  };\n\n  render() {\n    const {title, shortDesc, longDesc, techUsed, repo} = this.props.projectObj;\n    let size = \"small\";\n    let modalContent = null;\n    if (this.props.allowEdit) {\n      modalContent = (\n        <Flexbox heightPct={100} widthPct={100}\n                 minHeight={Modal.modalSizes[size].height}\n                 minWidth={Modal.modalSizes[size].width}>\n          <HeaderText title={title}/>\n          <TextInput color={CSSColor.MODAL_TEXT} textarea minWidth={640}\n                     rows={2} onChange={this.onChangeShortDesc}\n                     value={shortDesc} label=\"Short Description\"/>\n          <TextInput color={CSSColor.MODAL_TEXT} textarea minWidth={640}\n                     rows={10} onChange={this.onChangeLongDesc}\n                     value={longDesc} label=\"Long Description\"/>\n          <TextInput onChange={this.onChangeTechUsed} lineHeight={0.4}\n                     value={techUsed} fontWeight=\"bold\" label=\"Technologies\"/>\n\n          <Flexbox widthPct={100} autoMarginTop flexDirection=\"row\"\n                   justifyContent=\"flex-end\" alignItems=\"flex-end\">\n            {\n              this.props.allowEdit ?\n                <Button label=\"Save\" fontSize={14} lineHeight={0.5}\n                        paddingHorizontal={8}\n                        onClick={this.onSave}/> :\n                null\n            }\n            <Button label=\"Done\" fontSize={14} lineHeight={0.5}\n                    onClick={this.onClickDoneButton}/>\n          </Flexbox>\n        </Flexbox>\n      );\n    } else {\n      modalContent = (\n        <Flexbox heightPct={100} widthPct={100}\n                 minHeight={Modal.modalSizes[size].height}\n                 minWidth={Modal.modalSizes[size].width}>\n          <HeaderText title={title}/>\n          <Text color={CSSColor.MODAL_TEXT}>{longDesc}</Text>\n\n          <Flexbox widthPct={100} autoMarginTop flexDirection=\"row\"\n                   justifyContent=\"flex-end\" alignItems=\"flex-end\">\n            <Button label=\"Done\" fontSize={14} lineHeight={0.5}\n                    onClick={this.onClickDoneButton}/>\n          </Flexbox>\n        </Flexbox>\n      );\n    }\n\n    return (\n      <div>\n        <Modal size={size} show={this.state.showModal}\n               onBackdropClick={this.closeModal}>\n          {modalContent}\n        </Modal>\n        <Card {...this.props} onClick={this.onClickCard}\n              className={this.state.cls}>\n          <Flexbox heightPct={100}>\n            <Flexbox widthPct={100} flexDirection=\"row\">\n              <Text fontWeight=\"bold\">{title}</Text>\n              <Flexbox autoMarginLeft>\n                <Icon src=\"assets/github_icon_dark.png\" href={repo}\n                      target=\"_blank\" size={28} className=\"btnHover\"\n                      onClick={this.onClickRepoButton} logClick\n                      logDescription={\"Visited \" + title + \" Repo\"}/>\n              </Flexbox>\n            </Flexbox>\n            <Text>{shortDesc}</Text>\n            <Flexbox autoMarginTop className=\"btnHover\">\n              <Text fontWeight={500} lineHeight={0.4}>{techUsed}</Text>\n            </Flexbox>\n          </Flexbox>\n        </Card>\n      </div>\n    );\n  }\n}\n\nProjectCard.propTypes = {\n  dbKey: PropTypes.string,\n  projectObj: PropTypes.shape({\n    title: PropTypes.string,\n    shortDesc: PropTypes.string,\n    longDesc: PropTypes.string,\n    techUsed: PropTypes.string,\n    repo: PropTypes.string,\n  }).isRequired,\n  ...Card.propTypes,\n  allowEdit: PropTypes.bool,\n  onChangeLongDesc: PropTypes.func,\n  onChangeShortDesc: PropTypes.func,\n  onChangeTechUsed: PropTypes.func,\n  onSave: PropTypes.func,\n};\n\n\nexport default ProjectCard;","import Projects from './Projects';\nexport default Projects;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport profile from \"../../../static/Profile\";\nimport Button from '../../components/Button';\nimport Text from \"../../components/Text\";\nimport ProjectCard from \"./ProjectCard\";\nimport TextInput from \"../../components/TextInput\";\nimport {\n  fetchProjectsText, updateProjectContent,\n  updateProjectsText,\n} from \"../../../firebase/profile\";\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let heading = profile.projects.heading;\n    let text = profile.projects.text;\n    let objs = profile.projects.objs;\n    this.state = {\n      heading: heading,\n      text: text,\n      objs: objs,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateProjectsText(this.state.heading, this.state.text, () => {\n    }, (error) => {\n      alert('Error updating projects section.');\n    });\n  };\n\n  componentWillMount() {\n    fetchProjectsText((obj) => {\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n        objs: obj.objs || this.state.objs,\n      });\n    });\n  }\n\n  onChangeLongDesc = (e, val, dbKey) => {\n    let objs = this.state.objs;\n    objs[dbKey] = {...objs[dbKey], longDesc: val};\n    this.setState({\n      objs: objs,\n    });\n  };\n\n  onChangeShortDesc = (e, val, dbKey) => {\n    let objs = this.state.objs;\n    objs[dbKey] = {...objs[dbKey], shortDesc: val};\n    this.setState({\n      objs: objs,\n    });\n  };\n\n  onChangeTechUsed = (e, val, dbKey) => {\n    let objs = this.state.objs;\n    objs[dbKey] = {...objs[dbKey], techUsed: val};\n    this.setState({\n      objs: objs,\n    });\n  };\n\n  onClickSaveButton = (e, dbKey) => {\n    updateProjectContent(this.state.objs[dbKey], dbKey, () => {\n    }, (error) => {\n      alert('Error updating work experience card.');\n    });\n  };\n\n  render() {\n    let objs = this.state.objs;\n    let keys = Object.keys(this.state.objs);\n    keys = keys.sort();\n\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64} marginTop={32}>\n        <Flexbox className=\"overflow-wrap\" width={1000}\n                 flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox minWidth={320} maxWidth={320}>\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={2}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              this.props.allowEdit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={7}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n          <Flexbox flexDirection=\"row\" alignItems=\"center\" marginLeft={20}\n                   flexWrap={'wrap'}>\n            {\n              keys.map((index) => {\n                return (\n                  <ProjectCard key={index} dbKey={index}\n                               marginVertical={12} marginHorizontal={12}\n                               projectObj={objs[index]} width={272} height={150}\n                               paddingHorizontal={16} paddingVertical={8}\n                               borderRadius={1}\n                               allowEdit={this.props.allowEdit}\n                               onChangeLongDesc={this.onChangeLongDesc}\n                               onChangeShortDesc={this.onChangeShortDesc}\n                               onChangeTechUsed={this.onChangeTechUsed}\n                               onSave={this.onClickSaveButton}/>\n                );\n              })\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          this.props.allowEdit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update Projects\" fontSize={18}\n                      fontWeight={500} borderColor={CSSColor.BLACK_ALPHA_60}\n                      borderWidth={2} borderRadius={6} paddingHorizontal={12}\n                      allBorder lineHeight={0.8}\n                      onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nProjects.propTypes = {\n  allowEdit: PropTypes.bool,\n};\n\nexport default Projects;","import React from 'react';\nimport Logger from '../firebase/logger';\nimport Flexbox from './components/Flexbox';\nimport Navbar from './components/Navbar';\nimport NavbarUnit from './components/NavbarUnit';\nimport NavbarUnitIcon from './components/NavbarUnitIcon';\nimport profile from '../static/Profile';\n\nimport style from './style';\nimport AboutMe from \"./sections/AboutMe\";\nimport WorkExperience from \"./sections/WorkExperience\";\nimport Projects from \"./sections/Projects\";\nimport {logout, fetchLoginState} from \"../firebase/auth\";\nimport {getEditMode} from \"./common/utils\";\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let edit = getEditMode();\n    this.state = {\n      loggedIn: false,\n      edit: edit,\n    };\n  }\n\n  componentDidMount() {\n    let hasLogged = sessionStorage.getItem('hasLogged');\n    if (hasLogged !== '1') {\n      Logger.genLog({\n        action: 'view_portfolio',\n        description: 'Viewed Portfolio',\n      }, (_) => {\n        sessionStorage.setItem('hasLogged', '1');\n      });\n    }\n  }\n\n  componentWillMount() {\n    fetchLoginState((loggedIn) => this.setState({loggedIn: loggedIn}));\n  }\n\n  onClickLogout = (e) => {\n    logout(() => {\n      this.setState({loggedIn: false});\n    }, (e) => {\n      alert(e);\n    });\n  };\n\n  render() {\n    let allowEdit = this.state.loggedIn && this.state.edit;\n\n    let root = process.env.NODE_ENV === 'development' ? '/' : '/portfolio/';\n    return (\n      <Flexbox style={style.root} alignItems=\"center\">\n        <Navbar blur>\n          <NavbarUnit label=\"Daniel Nguyen\" position=\"left\" fontWeight={500}\n                      paddingHorizontal={16} href={root}/>\n          {\n            this.state.loggedIn ?\n              <NavbarUnit label=\"Logout\" onClick={this.onClickLogout}\n                          paddingHorizontal={16}/> :\n              null\n          }\n          <NavbarUnit label=\"Resume\" href=\"assets/Resume.pdf\" target=\"_blank\"\n                      logClick={true} logDescription=\"Visited Resume\" allBorder\n                      borderRadius={6}/>\n          <NavbarUnitIcon src={\"assets/github_icon.png\"}\n                          href={profile.githubLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Github\"/>\n          <NavbarUnitIcon src={\"assets/linkedin_icon.png\"}\n                          href={profile.linkedinLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited LinkedIn\"/>\n          <NavbarUnitIcon src={\"assets/facebook_icon.png\"}\n                          href={profile.fbLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Facebook\"/>\n        </Navbar>\n\n        <AboutMe allowEdit={allowEdit}/>\n        <WorkExperience allowEdit={allowEdit}/>\n        <Projects allowEdit={allowEdit}/>\n      </Flexbox>\n    );\n  }\n}\n\n\nexport default Home;","import history from '../history';\n\nexport function getEditMode() {\n  const params = new URLSearchParams(history.location.search);\n  let edit = params.get(\"edit\");\n  if (edit === \"true\") {\n    edit = true;\n  } else if (edit === \"false\") {\n    edit = false;\n  } else if (edit !== null && edit !== undefined) {\n    alert(\"edit parameter must be true or false\");\n    edit = false;\n  } else {\n    edit = false;\n  }\n  return edit;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Flexbox from './components/Flexbox';\nimport Navbar from './components/Navbar';\nimport NavbarUnit from './components/NavbarUnit';\nimport NavbarUnitIcon from './components/NavbarUnitIcon';\nimport Text from './components/Text';\nimport TextInput from './components/TextInput';\nimport profile from '../static/Profile';\n\nimport style from './style';\nimport './style.css';\nimport Button from \"./components/Button\";\nimport CSSColor from \"../constants/CSSColor\";\nimport {loginWithEmail} from '../firebase/auth';\nimport history from '../desktop/history';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  onEmailChange = (e, val) => {\n    this.setState({email: val});\n  };\n\n  onPasswordChange = (e, val) => {\n    this.setState({password: val});\n  };\n\n  onClickLogin = (e) => {\n    // Firebase login\n    let root = process.env.NODE_ENV === 'development' ? '/?edit=true' : '/portfolio/?edit=true';\n    loginWithEmail(this.state.email, this.state.password, (user) => {\n      history.push(root);\n    }, (error) => {\n      alert(error);\n    });\n  };\n\n  render() {\n    let root = process.env.NODE_ENV === 'development' ? '/' : '/portfolio/';\n    return (\n      <Flexbox style={style.root} className=\"login-page\" widthPct={100}\n               heightPct={100} alignItems=\"center\" justifyContent=\"center\">\n        <Navbar blur>\n          <NavbarUnit label=\"Daniel Nguyen\" position=\"left\" fontWeight={500}\n                      paddingHorizontal={16} href={root}/>\n          <NavbarUnit label=\"Resume\" href=\"assets/Resume.pdf\" target=\"_blank\"\n                      logClick={true} logDescription=\"Visited Resume\" hasBorder\n                      borderRadius={6}/>\n          <NavbarUnitIcon src={\"assets/github_icon.png\"}\n                          href={profile.githubLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Github\"/>\n          <NavbarUnitIcon src={\"assets/linkedin_icon.png\"}\n                          href={profile.linkedinLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited LinkedIn\"/>\n          <NavbarUnitIcon src={\"assets/facebook_icon.png\"}\n                          href={profile.fbLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Facebook\"/>\n        </Navbar>\n\n        <Flexbox widthPct={100} heightPct={100} alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox width={300} justifyContent=\"center\" alignItems=\"center\">\n            <form id=\"admin-login\">\n              <Flexbox widthPct={100} paddingVertical={8}>\n                <TextInput fillHeight type=\"email\" placeholder=\"Email\"\n                           onChange={this.onEmailChange} autoComplete=\"on\"/>\n              </Flexbox>\n              <Flexbox widthPct={100} paddingVertical={8}>\n                <TextInput fillHeight type=\"password\" placeholder=\"Password\"\n                           onChange={this.onPasswordChange} autoComplete=\"on\"/>\n              </Flexbox>\n            </form>\n\n            <Flexbox paddingVertical={8}>\n              <Button label=\"Login\" fontSize={16} fontWeight={500} allBorder\n                      borderRadius={4} borderWidth={2}\n                      borderColor={CSSColor.BLACK_ALPHA_60}\n                      paddingHorizontal={8} lineHeight={0.5}\n                      onClick={this.onClickLogin}\n                      disabled={\n                        this.state.email.length === 0 ||\n                        this.state.password.length === 0\n                      }\n                      disabledColor={CSSColor.GRAY_20}\n                      disabledBorderColor={CSSColor.GRAY_20}\n              />\n            </Flexbox>\n          </Flexbox>\n        </Flexbox>\n      </Flexbox>\n    );\n  }\n}\n\n\nexport default Login;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport MobileHome from './mobile/Home';\nimport DesktopHome from './desktop/Home';\nimport {isMobileOnly} from 'react-device-detect';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, HashRouter} from \"react-router-dom\";\nimport history from \"./desktop/history\";\nimport Login from \"./desktop/Login\";\n\n\nif (isMobileOnly) {\n  ReactDOM.render(<MobileHome/>, document.getElementById('root'));\n} else {\n  ReactDOM.render(\n    <HashRouter history={history}>\n      <Route exact path={\"/\"} component={DesktopHome}/>\n      <Route exact path={\"/login\"} component={Login}/>\n    </HashRouter>,\n    document.getElementById('root')\n  );\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}