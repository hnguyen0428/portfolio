{"version":3,"sources":["mobile/Home.js","config/firebase.js","firebase/logger.js","constants/CSSColor.js","desktop/common/props.js","desktop/components/Flexbox/Flexbox.js","desktop/components/Flexbox/index.js","desktop/components/Navbar/style.js","desktop/components/Text/Text.js","desktop/components/Text/index.js","desktop/components/Button/index.js","desktop/components/Button/Button.js","desktop/components/NavbarUnit/index.js","desktop/components/NavbarUnit/NavbarUnit.js","desktop/components/Image/index.js","desktop/components/Image/Image.js","desktop/components/Icon/index.js","desktop/components/Icon/Icon.js","desktop/components/NavbarUnitIcon/index.js","desktop/components/NavbarUnitIcon/NavbarUnitIcon.js","desktop/components/Navbar/index.js","desktop/components/Navbar/Navbar.js","desktop/components/Card/index.js","desktop/components/Card/Card.js","desktop/components/ProfileImage/index.js","desktop/components/ProfileImage/ProfileImage.js","static/Profile.js","desktop/style.js","desktop/components/TextInput/TextInput.js","desktop/components/TextInput/index.js","desktop/history.js","desktop/common/utils.js","desktop/sections/AboutMe/AboutMe.js","desktop/sections/AboutMe/index.js","firebase/profile.js","desktop/components/Modal/index.js","desktop/components/Modal/Modal.js","desktop/components/HeaderText/index.js","desktop/components/HeaderText/HeaderText.js","desktop/sections/WorkExperience/WorkExperienceCard/index.js","desktop/sections/WorkExperience/WorkExperienceCard/WorkExperienceCard.js","desktop/sections/WorkExperience/WorkExperience.js","desktop/sections/WorkExperience/index.js","desktop/sections/Projects/ProjectCard/index.js","desktop/sections/Projects/ProjectCard/ProjectCard.js","desktop/sections/Projects/Projects.js","desktop/sections/Projects/index.js","firebase/auth.js","desktop/Home.js","serviceWorker.js","desktop/Login.js","index.js"],"names":["Home","View","style","styles","box","text","React","Component","StyleSheet","create","padding","fontWeight","firebase","require","initializeApp","apiKey","databaseURL","projectId","messagingSenderId","database","auth","Logger","creationTime","moment","format","deviceInfo","isMobile","isMobileOnly","isTablet","isBrowser","osName","browserName","mobileModel","data","onSuccess","onFailure","this","getExtraData","ref","push","then","catch","CSSColor","GRAY_100","stylePropType","CommonProps","props","widthPct","width","String","heightPct","height","autoHeight","autoWidth","maxHeight","maxWidth","minHeight","minWidth","paddingAll","paddingTop","paddingLeft","paddingBottom","paddingRight","paddingVertical","paddingHorizontal","marginAll","marginTop","marginLeft","marginBottom","marginRight","marginVertical","marginHorizontal","autoMarginTop","autoMarginLeft","autoMarginBottom","autoMarginRight","topBorder","leftBorder","bottomBorder","rightBorder","allBorder","borderColor","GRAY_20","borderWidth","borderRadius","borderTopStyle","borderLeftStyle","borderBottomStyle","borderRightStyle","borderStyle","fontSize","fontColor","PRIMARY_TEXT","color","SECONDARY_TEXT","lineHeight","PropTypes","number","bool","justifyContent","oneOf","alignSelf","alignItems","string","href","target","logDescription","logClick","logExtra","object","Flexbox","onClick","e","display","flexDirection","flexWrap","flexGrow","flexShrink","flexBasis","backgroundColor","wordWrap","hidden","setPaddings","setMargins","setDimensions","setBorders","className","rel","children","navbar","BLACK_ALPHA_80","Text","logData","action","description","extra","genLog","setTextStyleOrDefault","cls","buttonFont","join","headingComponent","heading","Button","disabled","label","disabledBackgroundColor","disabledColor","disabledBorderColor","textColorStyle","NavbarUnit","position","WHITE","undefined","Image","alt","src","Icon","size","NavbarUnitIcon","Navbar","navbarStyle","blur","Card","ProfileImage","circular","profile","objs","name","title","date","techUsed","logo","shortDesc","longDesc","repo","demoLink","hasDemo","medias","mediaDescriptions","mediaTypes","root","TextInput","onChange","value","textarea","fillHeight","rows","placeholder","readOnly","pattern","type","createBrowserHistory","getEditMode","edit","URLSearchParams","history","location","search","get","alert","AboutMe","onChangeHeading","val","setState","onChangeText","onClickUpdate","updates","update","updateProfileText","state","error","aboutMe","loggedIn","onAuthStateChanged","user","snap","obj","console","log","once","LIGHT_WHITE","profileImage","GRAY_80","BLACK_ALPHA_60","email","Modal","onClickModal","stopPropagation","modalSizes","show","onBackdropClick","GRAY_05","small","medium","large","HeaderText","titleSize","subtitleSize","subtitle","WorkExperienceCard","openModal","showModal","closeModal","onClickCard","workExpObj","onClickDoneButton","header","MODAL_TEXT","WorkExperience","updateWorkExperienceText","workExperience","GRAY_70","map","i","key","ProjectCard","projectObj","onClickRepoButton","Projects","updateProjectsText","projects","slice","onClickLogout","signOut","sessionStorage","getItem","context","constructor","_","setItem","githubLink","linkedinLink","fbLink","Boolean","window","hostname","match","Login","onEmailChange","onPasswordChange","password","onClickLogin","setPersistence","Auth","Persistence","SESSION","signInWithEmailAndPassword","hasBorder","length","ReactDOM","render","document","getElementById","exact","path","component","DesktopHome","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d05c7017.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <View style={styles.box}>\n        <Text style={styles.text}>Mobile Portfolio Coming Soon (:</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: {padding: 10},\n  text: {fontWeight: 'bold'}\n});\n\n\nexport default Home;","const firebase = require('firebase');\n\nlet config = {\n  apiKey: \"AIzaSyCqpJRMS0Gk0vWAjHaZNrCe_dmrO51xEZ4\",\n  databaseURL: \"https://daniel-nguyen-portfolio.firebaseio.com/\",\n  projectId: \"daniel-nguyen-portfolio\",\n  messagingSenderId: \"517703319819\",\n};\n\nfirebase.initializeApp(config);\n\nexport const database = firebase.database();\nexport const auth = firebase.auth();","import {database} from '../config/firebase';\nimport moment from 'moment';\nimport {\n  isMobile,\n  osName,\n  isMobileOnly,\n  isBrowser,\n  browserName,\n  mobileModel\n} from 'react-device-detect';\n\n\nclass Logger {\n  static getExtraData() {\n    return {\n      creationTime: moment().format('MMMM Do YYYY, h:mm:ss a'),\n      deviceInfo: {\n        isMobile: isMobileOnly,\n        isTablet: isMobile && !isMobileOnly,\n        isBrowser: isBrowser,\n        osName: osName,\n        browserName: browserName,\n        mobileModel: mobileModel\n      }\n    };\n  }\n\n  static genLog(data, onSuccess, onFailure) {\n    let extraData = this.getExtraData();\n    data = {\n      ...extraData,\n      ...data\n    };\n\n    database.ref('actions').push(data)\n      .then(onSuccess).catch(onFailure)\n  }\n}\n\nexport default Logger;","\nclass CSSColor {\n  static get WHITE() {\n    return '#FFFFFF';\n  }\n\n  static get LIGHT_WHITE() {\n    return '#FAFAFA';\n  }\n\n  static get GRAY_00() {\n    return '#F5F6F7';\n  }\n\n  static get GRAY_05() {\n    return '#F2F3F5';\n  }\n\n  static get GRAY_10() {\n    return '#EBEDF0';\n  }\n\n  static get GRAY_20() {\n    return '#DADDE1';\n  }\n\n  static get GRAY_25() {\n    return '#CCD0D5';\n  }\n\n  static get GRAY_30() {\n    return '#BEC3C9';\n  }\n\n  static get GRAY_45() {\n    return '#8D949E';\n  }\n\n  static get GRAY_70() {\n    return '#606770';\n  }\n\n  static get GRAY_80() {\n    return '#444950';\n  }\n\n  static get GRAY_100() {\n    return '#1C1E21';\n  }\n\n  static get GRAY() {\n    return '#D2D5DF';\n  }\n\n  static get BLACK() {\n    return '#000000';\n  }\n\n  static get BLACK_ALPHA_05() {\n    return 'rgba(0, 0, 0, 0.05)';\n  }\n\n  static get BLACK_ALPHA_10() {\n    return 'rgba(0, 0, 0, 0.1)';\n  }\n\n  static get BLACK_ALPHA_20() {\n    return 'rgba(0, 0, 0, 0.2)';\n  }\n\n  static get BLACK_ALPHA_30() {\n    return 'rgba(0, 0, 0, 0.3)';\n  }\n\n  static get BLACK_ALPHA_40() {\n    return 'rgba(0, 0, 0, 0.4)';\n  }\n\n  static get BLACK_ALPHA_50() {\n    return 'rgba(0, 0, 0, 0.5)';\n  }\n\n  static get BLACK_ALPHA_60() {\n    return 'rgba(0, 0, 0, 0.6)';\n  }\n\n  static get BLACK_ALPHA_70() {\n    return 'rgba(0, 0, 0, 0.7)';\n  }\n\n  static get BLACK_ALPHA_80() {\n    return 'rgba(0, 0, 0, 0.8)';\n  }\n\n  static get BLACK_ALPHA_90() {\n    return 'rgba(0, 0, 0, 0.9)';\n  }\n\n  static get SECONDARY_TEXT() {\n    return 'rgba(145, 148, 155, 1.0)';\n  }\n\n  static get MODAL_TEXT() {\n    return 'rgba(117, 117, 117, 1.0)';\n  }\n\n  static get PRIMARY_TEXT() {\n    return CSSColor.GRAY_100;\n  }\n\n  static get BLUE() {\n    return '#3577EA';\n  }\n}\n\nexport default CSSColor;","import PropTypes from \"prop-types\";\nimport CSSColor from \"../../constants/CSSColor\";\nconst stylePropType = require('react-style-proptype');\n\n\nexport default class CommonProps {\n  static get paddings() {\n    return {\n      paddingVertical: PropTypes.number,\n      paddingHorizontal: PropTypes.number,\n      paddingLeft: PropTypes.number,\n      paddingRight: PropTypes.number,\n      paddingTop: PropTypes.number,\n      paddingBottom: PropTypes.number,\n      paddingAll: PropTypes.number,\n    };\n  }\n\n  static get margins() {\n    return {\n      marginVertical: PropTypes.number,\n      marginHorizontal: PropTypes.number,\n      marginLeft: PropTypes.number,\n      marginRight: PropTypes.number,\n      marginTop: PropTypes.number,\n      marginBottom: PropTypes.number,\n      marginAll: PropTypes.number,\n      autoMarginTop: PropTypes.bool,\n      autoMarginLeft: PropTypes.bool,\n      autoMarginBottom: PropTypes.bool,\n      autoMarginRight: PropTypes.bool,\n    };\n  }\n\n  static get alignments() {\n    return {\n      justifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),\n      alignSelf: PropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n      alignItems: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),\n    };\n  }\n\n  static get dimensions() {\n    return {\n      width: PropTypes.number,\n      height: PropTypes.number,\n      widthPct: PropTypes.number,\n      heightPct: PropTypes.number,\n      maxHeight: PropTypes.number,\n      maxWidth: PropTypes.number,\n      minHeight: PropTypes.number,\n      minWidth: PropTypes.number,\n      autoHeight: PropTypes.bool,\n      autoWidth: PropTypes.bool,\n    };\n  }\n\n  static get borders() {\n    return {\n      borderColor: PropTypes.string,\n      borderWidth: PropTypes.number,\n      borderRadius: PropTypes.number,\n      topBorder: PropTypes.bool,\n      leftBorder: PropTypes.bool,\n      bottomBorder: PropTypes.bool,\n      rightBorder: PropTypes.bool,\n      allBorder: PropTypes.bool,\n    };\n  }\n\n  static get text() {\n    return {\n      fontWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900, 'normal', 'bold', 'bolder', 'lighter']),\n      lineHeight: PropTypes.number,\n      fontSize: PropTypes.number,\n      color: PropTypes.string,\n    };\n  }\n\n  static get links() {\n    return {\n      href: PropTypes.string,\n      target: PropTypes.string,\n    };\n  }\n\n  static get style() {\n    return {\n      style: stylePropType,\n    };\n  }\n\n  static get loggings() {\n    return {\n      logDescription: PropTypes.string,\n      logClick: PropTypes.bool,\n      logExtra: PropTypes.object,\n    };\n  }\n\n  static setDimensions(style, props) {\n    if (props.widthPct) {\n      style = {...style, width: String(props.widthPct) + '%'};\n    }\n    if (props.width) {\n      style = {...style, width: props.width};\n    }\n    if (props.heightPct) {\n      style = {...style, height: String(props.heightPct) + '%'};\n    }\n    if (props.height) {\n      style = {...style, height: props.height};\n    }\n    if (props.autoHeight) {\n      style = {...style, height: 'auto'};\n    }\n    if (props.autoWidth) {\n      style = {...style, width: 'auto'};\n    }\n    if (props.maxHeight) {\n      style = {...style, maxHeight: props.maxHeight};\n    }\n    if (props.maxWidth) {\n      style = {...style, maxWidth: props.maxWidth};\n    }\n    if (props.minHeight) {\n      style = {...style, minHeight: props.minHeight};\n    }\n    if (props.minWidth) {\n      style = {...style, minWidth: props.minWidth};\n    }\n    return style;\n  }\n\n  static setPaddings(style, props) {\n    if (props.paddingAll) {\n      style = {...style, paddingTop: props.paddingAll};\n      style = {...style, paddingLeft: props.paddingAll};\n      style = {...style, paddingBottom: props.paddingAll};\n      style = {...style, paddingRight: props.paddingAll};\n    }\n    if (props.paddingVertical) {\n      style = {...style, paddingTop: props.paddingVertical};\n      style = {...style, paddingBottom: props.paddingVertical};\n    }\n    if (props.paddingHorizontal) {\n      style = {...style, paddingLeft: props.paddingHorizontal};\n      style = {...style, paddingRight: props.paddingHorizontal};\n    }\n    if (props.paddingTop) {\n      style = {...style, paddingTop: props.paddingTop};\n    }\n    if (props.paddingLeft) {\n      style = {...style, paddingLeft: props.paddingLeft};\n    }\n    if (props.paddingBottom) {\n      style = {...style, paddingBottom: props.paddingBottom};\n    }\n    if (props.paddingRight) {\n      style = {...style, paddingRight: props.paddingRight};\n    }\n    return style;\n  }\n\n  static setMargins(style, props) {\n    if (props.marginAll) {\n      style = {...style, marginTop: props.marginAll};\n      style = {...style, marginLeft: props.marginAll};\n      style = {...style, marginBottom: props.marginAll};\n      style = {...style, marginRight: props.marginAll};\n    }\n    if (props.marginVertical) {\n      style = {...style, marginTop: props.marginVertical};\n      style = {...style, marginBottom: props.marginVertical};\n    }\n    if (props.marginHorizontal) {\n      style = {...style, marginLeft: props.marginHorizontal};\n      style = {...style, marginRight: props.marginHorizontal};\n    }\n    if (props.marginTop) {\n      style = {...style, marginTop: props.marginTop};\n    }\n    if (props.marginLeft) {\n      style = {...style, marginLeft: props.marginLeft};\n    }\n    if (props.marginBottom) {\n      style = {...style, marginBottom: props.marginBottom};\n    }\n    if (props.marginRight) {\n      style = {...style, marginRight: props.marginRight};\n    }\n    if (props.autoMarginTop) {\n      style = {...style, marginTop: 'auto'};\n    }\n    if (props.autoMarginLeft) {\n      style = {...style, marginLeft: 'auto'};\n    }\n    if (props.autoMarginBottom) {\n      style = {...style, marginBottom: 'auto'};\n    }\n    if (props.autoMarginRight) {\n      style = {...style, marginRight: 'auto'};\n    }\n    return style;\n  }\n\n  static setBorders(style, props) {\n    const {topBorder, leftBorder, bottomBorder, rightBorder, allBorder} = props;\n    let hasBorder = topBorder || leftBorder || bottomBorder || rightBorder || allBorder;\n    if (!hasBorder) {\n      return style;\n    }\n\n    let borderColor = props.borderColor || CSSColor.GRAY_20;\n    let borderWidth = props.borderWidth || 1;\n    let borderRadius = props.borderRadius || 0;\n    style = {\n      ...style,\n      borderColor: borderColor,\n      borderWidth: borderWidth,\n      borderRadius: borderRadius,\n    };\n    if (topBorder) {\n      style = {...style, borderTopStyle: 'solid'};\n    }\n    if (leftBorder) {\n      style = {...style, borderLeftStyle: 'solid'};\n    }\n    if (bottomBorder) {\n      style = {...style, borderBottomStyle: 'solid'};\n    }\n    if (rightBorder) {\n      style = {...style, borderRightStyle: 'solid'};\n    }\n    if (allBorder) {\n      style = {...style, borderStyle: 'solid'};\n    }\n    return style;\n  }\n\n  static setTextStyleOrDefault(style, props) {\n    let fontSize = props.fontSize ? String(props.fontSize) + 'pt' : null;\n    let fontColor = CSSColor.PRIMARY_TEXT;\n    if (props.color) {\n      if (props.color === 'secondary') {\n        fontSize = '12pt';\n        fontColor = CSSColor.SECONDARY_TEXT;\n      } else if (props.color === 'primary') {\n        fontSize = '16pt';\n        fontColor = CSSColor.PRIMARY_TEXT;\n      } else {\n        fontColor = props.color;\n      }\n    }\n\n    return {\n      ...style,\n      fontWeight: props.fontWeight || 400,\n      fontSize: fontSize || '12pt',\n      lineHeight: props.lineHeight || 1.2,\n      color: fontColor,\n    };\n  }\n\n  static setTextStyle(style, props) {\n    if (props.fontWeight) {\n      style = {...style, fontWeight: props.fontWeight};\n    }\n    if (props.fontSize) {\n      style = {...style, fontSize: props.fontSize};\n    }\n    if (props.lineHeight) {\n      style = {...style, lineHeight: props.lineHeight};\n    }\n    if (props.color) {\n      if (props.color === 'primary') {\n        style = {...style, color: CSSColor.PRIMARY_TEXT};\n      } else if (props.color === 'secondary') {\n        style = {...style, color: CSSColor.SECONDARY_TEXT}\n      } else {\n        style = {...style, color: props.color};\n      }\n    }\n    return style;\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Flexbox extends React.Component {\n  onClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  render() {\n    let style = {\n      display: 'flex',\n      flexDirection: this.props.flexDirection || 'column',\n      flexWrap: this.props.flexWrap || 'nowrap',\n      flexGrow: this.props.flexGrow || 0,\n      flexShrink: this.props.flexShrink || 1,\n      flexBasis: this.props.flexBasis || 'auto',\n      justifyContent: this.props.justifyContent || 'flex-start',\n      alignSelf: this.props.alignSelf || 'auto',\n      alignItems: this.props.alignItems || 'flex-start',\n      backgroundColor: this.props.backgroundColor,\n      wordWrap: 'break-word',\n    };\n    if (this.props.hidden) {\n      style = {...style, display: 'none'};\n    }\n\n    style = CommonProps.setPaddings(style, this.props);\n    style = CommonProps.setMargins(style, this.props);\n    style = CommonProps.setDimensions(style, this.props);\n    style = CommonProps.setBorders(style, this.props);\n\n    if (this.props.href) {\n      // Use <a> as a flexbox to make the whole box hyperlinked\n      return (\n        <a className={`hyperlink ${this.props.className}`}\n           target={this.props.target} rel=\"noopener noreferrer\"\n           onClick={this.onClick}\n           style={{...style, ...this.props.style}} href={this.props.href}>\n          {this.props.children}\n        </a>\n      );\n    }\n\n    return (\n      <div className={this.props.className} onClick={this.onClick}\n           style={{...style, ...this.props.style}}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nFlexbox.propTypes = {\n  flexDirection: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  flexWrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  flexGrow: PropTypes.number,\n  flexShrink: PropTypes.number,\n  flexBasis: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  ...CommonProps.alignments,\n  ...CommonProps.paddings,\n  ...CommonProps.margins,\n  ...CommonProps.dimensions,\n  ...CommonProps.borders,\n  ...CommonProps.links,\n\n  hidden: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n\n  ...CommonProps.style,\n};\n\n\nexport default Flexbox;","import Flexbox from './Flexbox';\n\nexport default Flexbox;","import CSSColor from '../../../constants/CSSColor';\n\n\nconst style = {\n  navbar: {\n    backgroundColor: CSSColor.BLACK_ALPHA_80,\n  }\n};\n\nexport default style;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Text extends React.Component {\n  onClick = () => {\n    if (!this.props.logClick || !this.props.href) {\n      return;\n    }\n\n    let logData = {\n      action: 'visit_href',\n      href: this.props.href,\n    };\n    if (this.props.logDescription) {\n      logData = {...logData, description: this.props.logDescription};\n    }\n    if (this.props.logExtra) {\n      logData = {...logData, extra: this.props.logExtra};\n    }\n\n    // If there is an href, then log\n    Logger.genLog(logData);\n  };\n\n  render() {\n    let style = {};\n    style = CommonProps.setTextStyleOrDefault(style, this.props);\n    style = {...style, ...this.props.style};\n\n    let cls = [this.props.className, \"text\"];\n    if (this.props.buttonFont) {\n      cls.push(\"btnFont\");\n    } else {\n      cls.push(\"stdFont\");\n    }\n    cls = cls.join(' ');\n\n    let headingComponent = null;\n    switch (this.props.heading) {\n      case 1:\n        headingComponent = (\n          <h1 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h1>\n        );\n        break;\n      case 2:\n        headingComponent = (\n          <h2 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h2>\n        );\n        break;\n      case 3:\n        headingComponent = (\n          <h3 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h3>\n        );\n        break;\n      case 4:\n        headingComponent = (\n          <h4 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h4>\n        );\n        break;\n      case 5:\n        headingComponent = (\n          <h5 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h5>\n        );\n        break;\n      case 6:\n        headingComponent = (\n          <h6 className={cls}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h6>\n        );\n        break;\n      default:\n        headingComponent = (\n          <h1 className={cls} style={style}>\n            <a href={this.props.href} className=\"hyperlink\"\n               target={this.props.target} onClick={this.onClick}>\n              {this.props.children}\n            </a>\n          </h1>\n        );\n    }\n\n    return (\n      <div onClick={this.props.onClick}>\n        {headingComponent}\n      </div>\n    );\n  }\n}\n\nText.propTypes = {\n  className: PropTypes.string,\n  heading: PropTypes.oneOf([1, 2, 3, 4, 5, 6]),\n\n  ...CommonProps.links,\n  ...CommonProps.text,\n  ...CommonProps.loggings,\n\n  buttonFont: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: function (props, propName, componentName) {\n    let errorsCount = 0;\n    React.Children.forEach(props.children, function (e) {\n      if (typeof (e) !== 'string') {\n        errorsCount++;\n      }\n    });\n\n    if (errorsCount > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should have children of the following types: ' +\n        ' `string`.'\n      );\n    }\n  },\n  ...CommonProps.style,\n};\n\n\nexport default Text;","import Text from './Text';\nexport default Text;","import Button from './Button';\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport Text from \"../../components/Text\";\nimport './style.css';\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\nclass Button extends React.Component {\n  onClick = (e) => {\n    if (!this.props.disabled && this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  render() {\n    const {\n      fontSize,\n      fontWeight,\n      label,\n      lineHeight,\n      href,\n      target,\n      style,\n      paddingVertical,\n      paddingHorizontal,\n      borderRadius,\n      borderColor,\n      borderWidth,\n      topBorder,\n      leftBorder,\n      bottomBorder,\n      rightBorder,\n      allBorder,\n      backgroundColor,\n      color,\n      logDescription,\n      logClick,\n      disabled,\n      disabledBackgroundColor,\n      disabledColor,\n      disabledBorderColor,\n    } = this.props;\n    let textColorStyle = {\n      color: (disabled ? disabledColor : color) || CSSColor.GRAY_100\n    };\n\n    return (\n      <Flexbox className=\"btnHover cursorPointer\"\n               href={disabled ? null : href}\n               target={target}\n               onClick={this.onClick}\n               style={style}\n               paddingVertical={paddingVertical}\n               paddingHorizontal={paddingHorizontal}\n               borderRadius={borderRadius}\n               borderColor={disabled ? disabledBorderColor : borderColor}\n               borderWidth={borderWidth}\n               topBorder={topBorder}\n               leftBorder={leftBorder}\n               bottomBorder={bottomBorder}\n               rightBorder={rightBorder}\n               allBorder={allBorder}\n               backgroundColor={disabled ? disabledBackgroundColor : backgroundColor}>\n        <Text className=\"unselectable\"\n              fontSize={fontSize || 12}\n              fontWeight={fontWeight || 300}\n              href={disabled ? null : href} target={disabled ? null : target}\n              logClick={!disabled && logClick} lineHeight={lineHeight}\n              logDescription={logDescription} style={textColorStyle}\n              buttonFont>\n          {label}\n        </Text>\n      </Flexbox>\n    );\n  }\n}\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n\n  ...CommonProps.text,\n  ...CommonProps.links,\n  ...CommonProps.paddings,\n  ...CommonProps.borders,\n  ...CommonProps.loggings,\n\n  onClick: PropTypes.func,\n\n  // Disabled props\n  disabled: PropTypes.bool,\n  disabledColor: PropTypes.string,\n  disabledBackgroundColor: PropTypes.string,\n  disabledBorderColor: PropTypes.string,\n  ...CommonProps.style,\n\n};\n\nexport default Button;","import NavbarUnit from './NavbarUnit';\nexport default NavbarUnit;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport '../../../constants/common.css';\nimport Flexbox from '../Flexbox';\nimport Button from '../Button';\nimport Text from '../Text';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\n\nclass NavbarUnit extends React.Component {\n  render() {\n    let style = {};\n    if (this.props.position === 'left') {\n      style = {\n        ...style,\n        marginRight: 'auto'\n      };\n    }\n\n    return (\n      <Button {...this.props} style={style} color={CSSColor.WHITE}\n              fontSize={15} paddingHorizontal={this.props.paddingHorizontal || 8}\n              paddingVertical={this.props.paddingVertical}\n              lineHeight={this.props.allBorder ? 0.4 : undefined}\n              borderColor={this.props.borderColor}\n              borderWidth={this.props.borderWidth}\n              borderRadius={this.props.borderRadius}/>\n    );\n  }\n}\n\nNavbarUnit.propTypes = {\n  label: PropTypes.string.isRequired,\n  fontWeight: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900, 'normal', 'bold', 'bolder', 'lighter']),\n  ...CommonProps.links,\n  ...CommonProps.borders,\n\n  color: PropTypes.string,\n  paddingHorizontal: PropTypes.number,\n  paddingVertical: PropTypes.number,\n\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  position: PropTypes.oneOf(['left', 'right']),\n};\n\n\nexport default NavbarUnit;","import Image from './Image';\nexport default Image","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport CommonProps from \"../../common/props\";\n\n\nclass Image extends React.Component {\n  onClick = () => {\n    if (!this.props.logClick || !this.props.href) {\n      return;\n    }\n\n    let logData = {\n      action: 'visit_href',\n      href: this.props.href,\n    };\n    if (this.props.logDescription) {\n      logData = {...logData, description: this.props.logDescription};\n    }\n    if (this.props.logExtra) {\n      logData = {...logData, extra: this.props.logExtra};\n    }\n\n    // If there is an href, then log\n    Logger.genLog(logData);\n  };\n\n  render() {\n    return (\n      <div onClick={this.props.onClick}>\n        <a href={this.props.href} className=\"hyperlink\"\n           onClick={this.onClick} target={this.props.target}>\n          {\n            this.props.width || this.props.height ?\n              <img alt={this.props.alt || ' '} src={this.props.src}\n                   width={this.props.width} height={this.props.height}\n                  className={this.props.className}/> :\n              <img alt={this.props.alt || ' '} src={this.props.src}\n                   className={`img-autosize ${this.props.className}`}/>\n          }\n        </a>\n      </div>\n    );\n  }\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  children: function (props, propName, componentName) {\n    let numChildren = React.Children.count(props.children);\n    if (numChildren > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should not have any children.'\n      );\n    }\n  }\n};\n\n\nexport default Image;","import Icon from './Icon';\nexport default Icon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Logger from '../../../firebase/logger';\nimport './style.css';\nimport Image from \"../Image\";\nimport CommonProps from \"../../common/props\";\n\n\nclass Icon extends React.Component {\n  render() {\n    let size = this.props.size || 32;\n\n    return (\n      <Image {...this.props} width={size} height={size}/>\n    );\n  }\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  size: PropTypes.oneOf([16, 20, 24, 28, 32, 36, 40]),\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func\n};\n\n\nexport default Icon;","import NavbarUnitIcon from './NavbarUnitIcon';\nexport default NavbarUnitIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport '../../../constants/common.css';\nimport Flexbox from '../Flexbox';\nimport Icon from '../Icon';\nimport CommonProps from \"../../common/props\";\n\n\nclass NavbarUnitIcon extends React.Component {\n  render() {\n    let style = {};\n    if (this.props.position === 'left') {\n      style = {...style, marginRight: 'auto'};\n    }\n\n    return (\n      <Flexbox className=\"navbarUnitIcon\" onClick={this.props.onClick}\n               style={style} alignItems=\"center\" justifyContent=\"center\">\n        <Icon className=\"btnHover\"\n              href={this.props.href} target={this.props.target}\n              src={this.props.src} size={28}\n              logDescription={this.props.logDescription}\n              logClick={this.props.logClick}/>\n      </Flexbox>\n    );\n  }\n}\n\nNavbarUnitIcon.propTypes = {\n  src: PropTypes.string,\n  size: PropTypes.oneOf([16, 20, 24, 28, 32, 36, 40]),\n  ...CommonProps.links,\n  ...CommonProps.loggings,\n  onClick: PropTypes.func,\n  position: PropTypes.oneOf(['left', 'right']),\n};\n\n\nexport default NavbarUnitIcon;","import Navbar from './Navbar';\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style';\nimport NavbarUnit from '../NavbarUnit';\nimport Flexbox from '../Flexbox';\nimport NavbarUnitIcon from \"../NavbarUnitIcon\";\nimport './style.css';\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass Navbar extends React.Component {\n  render() {\n    let navbarStyle = style.navbar;\n    if (this.props.color) {\n      navbarStyle = {...navbarStyle, backgroundColor: this.props.color};\n    }\n\n    return (\n      <Flexbox className={this.props.blur ? \"navbar navbarBlur\" : \"navbar\"}\n               style={navbarStyle} flexDirection=\"row\"\n               justifyContent=\"flex-end\" alignItems=\"center\">\n        {this.props.children}\n      </Flexbox>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  color: PropTypes.string,\n  blur: PropTypes.bool,\n  style: stylePropType,\n  children: function (props, propName, componentName) {\n    let validTypes = [NavbarUnit.name, NavbarUnitIcon.name];\n    let errorsCount = 0;\n    React.Children.forEach(props.children, function (e) {\n      if (validTypes.indexOf(e.type.name) === -1) {\n        errorsCount++;\n      }\n    });\n\n    if (errorsCount > 0) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should have children of the following types: ' +\n        ' `' + validTypes.join(',') + '`.'\n      );\n    }\n  }\n};\n\n\nexport default Navbar;","import Card from './Card';\nexport default Card;","import React from 'react';\nimport Flexbox from '../Flexbox';\nimport './style.css';\nimport PropTypes from 'prop-types';\n\n\nclass Card extends React.Component {\n  render() {\n    let cls = this.props.className;\n    if (cls) {\n      cls += \" card\";\n    } else {\n      cls = \"card\";\n    }\n\n    return (\n      <Flexbox {...this.props} className={cls} style={{\n        ...this.props.style,\n        borderRadius: this.props.borderRadius || 4\n      }}>\n        {this.props.children}\n      </Flexbox>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...Flexbox.propTypes,\n  borderRadius: PropTypes.number,\n};\n\n\nexport default Card;","import ProfileImage from './ProfileImage';\nexport default ProfileImage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from '../Image';\nimport './style.css';\n\n\nclass ProfileImage extends React.Component {\n  render() {\n    let {src, alt, size, circular, href, target, onClick} = this.props;\n    size = size || 256;\n    return (\n      <Image src={src} alt={alt} width={size} height={size} href={href}\n             target={target} onClick={onClick}\n             className={circular ? \"circular\" : null}/>\n    );\n  }\n}\n\nProfileImage.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  size: PropTypes.number,\n  circular: PropTypes.bool,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  onClick: PropTypes.func\n};\n\n\nexport default ProfileImage;","const profile = {\n  \"aboutMe\": {\n    \"heading\": \"Hello, My name is Daniel!\",\n    \"text\": \"I'm an incoming Senior at UC San Diego studying Computer Science with \" +\n      \"a minor in Math. I'm currently interning at Facebook as a Software Engineer \" +\n      \"working on the Facebook Events product.\\n\\n\" +\n      \"My primary interests are in Computer Networks and Security and I hope to \" +\n      \"be able to work in the field some day. In my free time, I develop mobile apps \" +\n      \"and websites such as my portfolio since I find it very enjoyable to create \" +\n      \"something that you could directly experience.\\n\\n\" +\n      \"What I look for in a job is the ability to make an impact. I'm motivated \" +\n      \"by the fact that I could create something that can bring benefits to \" +\n      \"the society. I will be graduating in June 2020 and looking toward a full time \" +\n      \"opportunities in Software Engineering.\",\n  },\n  \"workExperience\":  {\n    objs: [\n      {\n        name: \"Facebook\",\n        title: \"Software Engineering Intern\",\n        date: \"June 2019 - September 2019\",\n        description: \"Working on the Events Distribution team.\",\n        techUsed: \"Python, Presto/Hive\",\n        logo: \"assets/facebook_logo_text.png\"\n      },\n      {\n        name: \"Teradata\",\n        title: \"Software Engineering Intern\",\n        date: \"June 2018 - September 2018\",\n        description: \"Created a dashboard that displays metrics such as Memory Usage, Paging Activity, Jenkins Jobs’ \" +\n          \"statuses, and active docker containers.\\n\\n\" +\n          \"Wrote API integration tests for Cloud features (Teradata's Customer Database Console) to ensure quality of \" +\n          \"Production application. These features include but not limited to changing instance types, scaling the number of \" +\n          \"EC2 instances, and expanding storage.\\n\\n\" +\n          \"Wrote Bash script for sanity check and automatic Jenkins build deployment and running when a PR is merged.\\n\\n\" +\n          \"Used Terraform to deploy an AutoTag system (open source project) to tag AWS resources created with the owner’s\" +\n          \"names.\\n\\n\" +\n          \"Wrote an add-on to the open source project for listening to AWS Cloud Trail’s logs for Lambda Create event in \" +\n          \"order to tag the Lambda function upon creation.\\n\",\n        techUsed: \"Ruby Sinatra, Dashing, Docker, REST, Jenkins, Prometheus, AWS\\n\",\n        logo: \"assets/teradata_logo_text.png\"\n      },\n    ],\n    heading: \"Work Experience\",\n    text: \"I've been fortunate to have interned at two companies during my \" +\n      \"time in college. These internships have helped me tremendously in \" +\n      \"progressing my industry experience.\\n\" +\n      \"Click on the logos to find more about my experience.\"\n  },\n  \"projects\": {\n    objs: [\n      {\n        title: \"Code Style Linter\",\n        shortDesc: \"A style linter for C and ARM Assembly files.\",\n        longDesc: \"The style linter is capable of checking many things ranging from indentations, \\\"Magic\\\" numbers, lines\" +\n          \" over 80 characters, and some more. \\n\\n I developed this to make my life easier grading students' \" +\n          \"programming assignments, where I had to check if their code followed the style guidelines.\",\n        techUsed: \"Python\",\n        repo: \"https://github.com/hnguyen0428/style_checker\",\n        date: \"April 2019\",\n        demoLink: null,\n        hasDemo: false,\n        medias: null,\n        mediaDescriptions: [],\n        mediaTypes: []\n      },\n      {\n        title: \"CodeSnippler\",\n        shortDesc: \"A website for quickly looking up common code snippets in \" +\n          \"order to assist with the developing process.\",\n        longDesc: \"I developed the back end using Spring, which hosts a REST service that acts as a proxy between the front end \" +\n          \"and the database. The Spring server handles everything from CRUD operations to complex queries such as those \" +\n          \"used to query the popular snippets.\\n\\n\" +\n          \"The front end is a web application, which is made using React. It allows users to do things such as creating \" +\n          \"code snippets, saving code snippets for future lookups, and filtering the languages that they see in their \" +\n          \"feed.\",\n        techUsed: \"React Spring MongoDB\",\n        repo: \"https://github.com/hnguyen0428/code-snippler\",\n        date: \"September 2018\",\n        demoLink: \"https://code-snippler.herokuapp.com\",\n        hasDemo: false,\n        medias: null,\n        mediaDescriptions: [],\n        mediaTypes: []\n      },\n      {\n        title: \"GroupPlanner\",\n        shortDesc: \"An iOS application that helps you find the appropriate time to hang out with your \" +\n          \"friends.\",\n        longDesc: \"GroupPlanner is an iOS application created as part of the CodePath bootcamp \" +\n          \"project. The app uses Google Calendar API in order to pull users' events and overlay them on top of a calendar \" +\n          \"view.\\n\\n\" +\n          \"I also implemented an algorithm that would calculate available times of all users' in a group and display \" +\n          \"them to make it easier for users to know when their friends are free.\\n\\n\" +\n          \"Won CodePath Best in Show and Best App Idea award.\",\n        techUsed: \"Swift OAuth Parse\",\n        repo: \"https://github.com/hecs-software/group-planner\",\n        date: \"May 2018\",\n        demoLink: null,\n        hasDemo: true,\n        medias: [\n          \"assets/demos/groupplanner/mycalendar.PNG\",\n          \"assets/demos/groupplanner/grouplist.PNG\",\n          \"assets/demos/groupplanner/createnewgroup.PNG\",\n          \"assets/demos/groupplanner/groupcalendar.PNG\",\n          \"assets/demos/groupplanner/timematcher.PNG\"\n        ],\n        mediaDescriptions: [\n          'Google Calendar of the logged in user with the events pulled from Google API',\n          'This page shows all the groups that the user is currently in. From this page, the user can press the + sign to ' +\n          'create a new group or view the group details by clicking on one of the groups.',\n          'To create a group, the user simply decides a name and has the option to invite their friends now or later.',\n          'This is the group calendar where all users\\' events inside the group are pulled and displayed. The event details ' +\n          'are hidden and only displayed as shaded. The user can toggle which users\\' events to display by tapping on their ' +\n          'profile pictures at the bottom. From here, the user can tap on the top right icon to go to the time matcher.',\n          'In the time matcher, the user can see what time everyone is available by looking at the green shaded area. ' +\n          'Again, the user can toggle which users to include in the time matching by toggling them at the bottom.'\n        ],\n        mediaTypes: [\n          'image',\n          'image',\n          'image',\n          'image',\n          'image'\n        ]\n      },\n      {\n        title: \"GuitarTuner\",\n        shortDesc: \"An iOS application that can be used to tune the guitar.\",\n        longDesc: \"GuitarTuner was developed as a tool to help users tune their guitar with more than \" +\n          \"just the standard tuning.\\n\\n\" +\n          \"I used Apple's Accelerate framework to perform Fast Fourier Transform along with applying a second-order filter \" +\n          \"on the audio signal captured by the phone in order to determine the frequency of the note being played.\\n\",\n        techUsed: \"Swift\",\n        repo: \"https://github.com/hnguyen0428/GuitarTuner\",\n        date: \"December 2017\",\n        demoLink: null,\n        hasDemo: true,\n        medias: [\n          \"assets/demos/guitartuner/homepage.PNG\",\n          \"assets/demos/guitartuner/GuitarTunerDemo.mov\",\n        ],\n        mediaDescriptions: [\n          'This is the front page of the app, which shows all the supported types of tuning.',\n          'Once the user starts tuning, they can pick which string to tune and plays the string. The microphone will pick ' +\n          'up the tone and calculate the frequency and determine whether the string is in tune. The meter will appear ' +\n          'green once the string is in tune.'\n        ],\n        mediaTypes: [\n          'image',\n          'video'\n        ]\n      },\n      {\n        title: \"ZeroIn\",\n        shortDesc: \"A web app designed to save time for students who are looking to study more effectively by \" +\n          \"annotating lecture videos with time marks that contain important information and links where students can look \" +\n          \"to study more about that topic.\",\n        longDesc: \"ZeroIn was created at Hacktech 2018. The web app allows users to upload a lecture video \" +\n          \"that would then be sent to the back end.\\n\\n\" +\n          \"Our back end processes the audio and uses text analytics in order to determine what information is being \" +\n          \"conveyed in the video. It then sends back important key words that are mentioned in the video and links to \" +\n          \"where these topics can be found online.\\n\",\n        techUsed: \"Python, JavaScript, ReactJS, Flask, AWS, Apache, Microsoft Cognitive Services Text Analytics \" +\n          \"API, Bing Search, and Speech Recognition\",\n        repo: \"https://github.com/hnguyen0428/caltech-ms-server\",\n        date: \"March 2018\",\n        demoLink: null,\n        hasDemo: false,\n        medias: null,\n        mediaDescriptions: [],\n        mediaTypes: []\n      },\n      {\n        title: \"LetsMeet\",\n        shortDesc: \"A mobile application designed to help college students find local events that are \" +\n          \"happening around them\",\n        longDesc: \"I created the back end, which is used for handling complex searching queries in order to \" +\n          \"compensate for Firebase's lack of support for searching by substring. The search results are then cached to \" +\n          \"memory in order to make subsequent queries faster. The front end retrieves these data through the API \" +\n          \"endpoints that I created.\\n\\n\" +\n          \"On the front end, I implemented Facebook OAuth for ease of registration. I also handled images caching in order \" +\n          \"for the feed to load much faster.\\n\",\n        techUsed: \"JavaScript, ReactNative, Firebase, Node.js, Facebook OAuth, Google Maps API\",\n        repo: \"https://github.com/SPISYDEVS\",\n        date: \"June 2018\",\n        demoLink: null,\n        hasDemo: true,\n        medias: [\n          \"assets/demos/letsmeet/login.PNG\",\n          \"assets/demos/letsmeet/feed.PNG\",\n          \"assets/demos/letsmeet/feedsettings.PNG\",\n          \"assets/demos/letsmeet/myevents.PNG\",\n          \"assets/demos/letsmeet/createevent.PNG\",\n          \"assets/demos/letsmeet/eventdetails.PNG\",\n          \"assets/demos/letsmeet/comment.PNG\"\n        ],\n        mediaDescriptions: [\n          'Login Page of Let\\'s Meet',\n          'This is the feed page that shows all the events in the future that are going to happen. The feed loads events ' +\n          'that are close by based on the user\\' settings set in the settings page.',\n          'Feed Settings page where the user can configure the radius where they want events to show up on their feed',\n          'This page shows all the events the user has created in the past',\n          'This page allows user to create their own event. User can add tags to the events, which will allow for people ' +\n          'to search based on those tags.',\n          'This page shows everything you need to know about the event, including everything from the date to who\\'s ' +\n          'intending to come.',\n          'This page allows user to comment on the event for communication purposes. It utilizes Firebase\\'s real time ' +\n          'feature to listen for comment creation and shows the comment in real time.'\n        ],\n        mediaTypes: [\n          'image',\n          'image',\n          'image',\n          'image',\n          'image',\n          'image',\n          'image'\n        ]\n      },\n      {\n        title: \"Zenyth\",\n        shortDesc: \"A mobile application that allows you to create memory of places you have traveled to\",\n        longDesc: \"I designed the relational database schema and normalized it. The key features that I \" +\n          \"implemented include: request throttling when the same user spams too many requests to the same API endpoint, \" +\n          \"caching JSON response, and caching different image sizes.\\n\\n\" +\n          \"On the iOS application, I implemented Facebook/Google OAuth for authentication and implemented the core \" +\n          \"Model-View-Controller design. This includes building the network layer so that all JSON responses that come \" +\n          \"from the back end are serialized into model objects so that the presentation layer can display them.\\n\",\n        techUsed: \"PHP, Swift, Laravel, MySQL, Redis, AWS, Apache, Google Maps API, Google/Facebook OAuth\",\n        repo: \"https://github.com/jeff4elee/zenyth_server\",\n        date: \"July 2017\",\n        demoLink: null,\n        hasDemo: false,\n        medias: null,\n        mediaDescriptions: [],\n        mediaTypes: []\n      }\n    ],\n    heading: \"Some Projects I've Worked On\",\n    text: \"These are the projects I've created in my free time while in college. \" +\n      \"I had a lot of fun developing these projects and it is mainly through these projects \" +\n      \"that I've initially gained the knowledge required for industry work.\",\n  },\n  \"education\": {\n    \"school\": \"UC San Diego\",\n    \"major\": \"BS Computer Science\",\n    \"gradDate\": \"2020\",\n    \"gpa\": \"3.78\",\n    \"organizations\": \"Eta Kappa Nu, Computer Science Engineering Society\",\n    \"description\": \"At UC San Diego, I serve as a tutor for the CSE department. \" +\n      \"My responsibility includes grading assignments, holding lab hours to help students debug \" +\n      \"their programming assignments, and holding quiz reviews and discussions. \" +\n      \"I have tutored for CSE 11: Intro to Object Oriented Programming, and CSE 30: Systems \" +\n      \"Programming (using C and ARM Assembly).\",\n    \"courses\": [\n      {\n        \"courseName\": \"Computer Networks\",\n        \"courseDesc\": \"Course covers topics on computer networks architecture, current internet \" +\n          \"standards, routing and congestion controls, and transport protocols.\\n\" +\n          \"Projects include creating a Sliding-Window-Protocol in order to send and receive packets with \" +\n          \"error detection, and creating a router, which handles receiving packets and forwarding packets to their \" +\n          \"destinations.\"\n      },\n      {\n        \"courseName\": \"Computer Security\",\n        \"courseDesc\": \"Course covers topics on computer security such as low-level software security, \" +\n          \"cryptography, web security, networks security, hardware security, side channels, and computer \" +\n          \"virus/malware.\\n\" +\n          \"Two major projects include replicating a buffer overflow exploit and a man-in-the-middle attack \" +\n          \"that injects iframes into http packets.\"\n      },\n      {\n        \"courseName\": \"Computer Vision\",\n        \"courseDesc\": \"Course covers topics in computer vision such as photometric stereo, binary image \" +\n          \"processing, image filtering, edge detection, and object tracking.\"\n      },\n      {\n        \"courseName\": \"Deep Learning\",\n        \"courseDesc\": \"Course covers neural networks topics such as perceptron learning, vanilla neural \" +\n          \"networks, convolutional neural networks, recurrent neural networks, reinforcement learning and \" +\n          \"generative adversarial networks. It also covers machine learning techniques such as \" +\n          \"gradient descent, regressions, and maximum likelihood.\\n\" +\n          \"One of the projects I did was creating a CNN that trains on a set of Xray data in order to \" +\n          \"classify what diseases the patient has. Another project is where I created a recurrent neural \" +\n          \"network (LSTM to be specific) and trains it on a beer reviews dataset in order to then generate \" +\n          \"similar beer reviews based on a given rating and beer category.\\n\" +\n          \"These two projects were done using PyTorch.\"\n      },\n      {\n        \"courseName\": \"Digital Systems Laboratory\",\n        \"courseDesc\": \"Course covers programming system simulations using Verilog.\"\n      },\n      {\n        \"courseName\": \"Natural Language Processing\",\n        \"courseDesc\": \"Course covers NLP topics such as language semantics, text prediction, smoothing \" +\n          \"techniques (Katz Backoff, Kneser-Ney), sentiment classification with logistic regression, machine \" +\n          \"translation using IBM model.\\n\" +\n          \"Projects include designing an n-gram probabilistic text generation model, a sentiment classification \" +\n          \"model of Yelp reviews, Gene sequence tagging using Hidden Markov Model, and alignment model between \" +\n          \"English and Spanish text.\"\n      },\n      {\n        \"courseName\": \"Object Oriented Programming\",\n        \"courseDesc\": \"Course covers OOP concepts in Java.\"\n      },\n      {\n        \"courseName\": \"Programming Languages Paradigm\",\n        \"courseDesc\": \"Course covers functional programming using Haskell. Projects include developing a \" +\n          \"fully functional language, which involves creating a Lexer, Parser, and an interpreter.\"\n      },\n      {\n        \"courseName\": \"Recommenders System\",\n        \"courseDesc\": \"Course covers basic machine learning methods such as Linear Regression, Logistic \" +\n          \"Regression, SVM, and also various techniques on how to design recommender systems\\n\" +\n          \"Projects include designing rating model, category prediction model, and purchase prediction model \" +\n          \"using sklearn library.\"\n      },\n      {\n        \"courseName\": \"Software Engineering\",\n        \"courseDesc\": \"Course covers software engineering design patterns and best practices. We also worked on \" +\n          \"a quarter-long project, working in a group of 10 people following Agile development.\"\n      },\n      {\n        \"courseName\": \"Systems Programming\",\n        \"courseDesc\": \"Course covers low-level C and Assembly programming in ARM architecture.\"\n      },\n    ]\n  },\n  \"resumeLink\": \"https://drive.google.com/open?id=1jxLAQ1ZC5Ie_IHezqILVmoj9YjOW2YuJ\",\n  \"fbLink\": \"https://www.facebook.com/hnguyen0428\",\n  \"githubLink\": \"https://github.com/hnguyen0428?tab=repositories\",\n  \"linkedinLink\": \"https://www.linkedin.com/in/hnguyen0428\",\n  \"profileImage\": \"assets/profile_picture.jpg\",\n  \"email\": \"hnguyen0428@gmail.com\",\n};\n\nexport default profile;","import CSSColor from \"../constants/CSSColor\";\n\nconst style = {\n  root: {\n    width: '100%',\n  }\n};\n\nexport default style;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Flexbox from '../Flexbox';\nimport '../Text/style.css';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport CommonProps from \"../../common/props\";\n\nconst stylePropType = require('react-style-proptype');\n\n\nclass TextInput extends React.Component {\n  onChange = (e) => {\n    let value = e.target.value;\n    if (this.props.onChange) {\n      this.props.onChange(e, value);\n    }\n  };\n\n  render() {\n    let style = {};\n    style = CommonProps.setTextStyleOrDefault(style, this.props);\n    style = CommonProps.setDimensions(style, this.props);\n    if (!this.props.textarea && style.height === undefined) {\n      style = this.props.textarea ? style : {...style, height: style.fontSize};\n    }\n    style = {...style, ...this.props.style};\n\n    if (this.props.textarea) {\n      return (\n        <Flexbox widthPct={100} heightPct={this.props.fillHeight ? 100 : null}>\n          <textarea style={style} className=\"text-input stdFont\"\n                    onChange={this.onChange} rows={this.props.rows || 5}\n                    placeholder={this.props.placeholder}\n                    disabled={this.props.disabled}\n                    readOnly={this.props.readOnly}\n                    value={this.props.value}/>\n        </Flexbox>\n      );\n    } else {\n      return (\n        <Flexbox widthPct={100} heightPct={this.props.fillHeight ? 100 : null}>\n          <input style={style} className=\"text-input stdFont\"\n                 onChange={this.onChange} placeholder={this.props.placeholder}\n                 disabled={this.props.disabled} pattern={this.props.pattern}\n                 readOnly={this.props.readOnly} type={this.props.type}\n                 value={this.props.value}/>\n        </Flexbox>\n      );\n    }\n  }\n}\n\nTextInput.propTypes = {\n  ...CommonProps.style,\n  value: PropTypes.string,\n\n  ...CommonProps.text,\n  // Dimension applies to text area only\n  ...CommonProps.dimensions,\n\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  pattern: PropTypes.string,\n  readOnly: PropTypes.bool,\n  inputSize: PropTypes.number,\n\n  fillHeight: PropTypes.bool, // Fill 100% height of parent div\n  type: PropTypes.oneOf(['password', 'email', 'text', 'number']),\n  textarea: PropTypes.bool,\n\n  rows: PropTypes.number, // Number of rows of textarea\n  onChange: PropTypes.func, // (event, value) ==> {}\n};\n\nexport default TextInput;","import TextInput from './TextInput';\nexport default TextInput;","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory({});","import history from '../history';\n\nexport function getEditMode() {\n  const params = new URLSearchParams(history.location.search);\n  let edit = params.get(\"edit\");\n  if (edit === \"true\") {\n    edit = true;\n  } else if (edit === \"false\") {\n    edit = false;\n  } else if (edit !== null && edit !== undefined) {\n    alert(\"edit parameter must be true or false\");\n    edit = false;\n  } else {\n    edit = false;\n  }\n  return edit;\n}","import React from 'react';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport ProfileImage from \"../../components/ProfileImage\";\nimport profile from \"../../../static/Profile\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport {fetchProfileText, updateProfileText} from \"../../../firebase/profile\";\nimport TextInput from \"../../components/TextInput\";\nimport {getEditMode} from \"../../common/utils\";\nconst firebase = require('firebase');\n\nclass AboutMe extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let edit = getEditMode();\n    let heading = profile.aboutMe.heading;\n    let text = profile.aboutMe.text;\n    this.state = {\n      heading: heading,\n      text: text,\n      edit: edit,\n      loggedIn: false,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateProfileText(this.state.heading, this.state.text, () => {\n\n    }, (error) => {\n      alert('Error updating about me section.');\n    });\n  };\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({loggedIn: true});\n      } else {\n        this.setState({loggedIn: false});\n      }\n    });\n\n    fetchProfileText((snap) => {\n      let obj = snap.val();\n      console.log(obj);\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n      });\n    });\n  }\n\n  render() {\n    let loggedIn = this.state.loggedIn;\n\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64}>\n        <Flexbox className=\"overflow-wrap\"\n                 width={1100}\n                 flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox paddingHorizontal={32} alignItems=\"center\">\n            <ProfileImage src={profile.profileImage} size={350} circular/>\n            <Flexbox marginTop={16}>\n              <Button label={\"Email Me!\"} allBorder borderRadius={2}\n                      paddingHorizontal={12} paddingVertical={4}\n                      color={CSSColor.GRAY_80} fontWeight={500}\n                      backgroundColor={CSSColor.LIGHT_WHITE}\n                      borderColor={CSSColor.BLACK_ALPHA_60} borderWidth={2}\n                      href={`mailto: ${profile.email}`}/>\n            </Flexbox>\n          </Flexbox>\n          <Flexbox flexDirection=\"column\" flexGrow={1}>\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={1}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={15}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          loggedIn && this.state.edit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update About Me\" fontSize={18} fontWeight={500}\n                      borderColor={CSSColor.BLACK_ALPHA_60} borderWidth={2}\n                      borderRadius={6} paddingHorizontal={12} allBorder\n                      lineHeight={0.8} onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nexport default AboutMe;","import AboutMe from './AboutMe';\nexport default AboutMe;","import {database} from '../config/firebase';\n\nexport function updateProfileText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/aboutMe/heading\"] = heading;\n  updates[\"/profile/aboutMe/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchProfileText(onSuccess, onFailure) {\n  database.ref(\"/profile/aboutMe\").once('value').then(onSuccess).catch(onFailure);\n}\n\nexport function updateWorkExperienceText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/workExperience/heading\"] = heading;\n  updates[\"/profile/workExperience/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchWorkExperienceText(onSuccess, onFailure) {\n  database.ref(\"/profile/workExperience\").once('value').then(onSuccess).catch(onFailure);\n}\n\nexport function updateProjectsText(heading, text, onSuccess, onFailure) {\n  let updates = {};\n  updates[\"/profile/projects/heading\"] = heading;\n  updates[\"/profile/projects/text\"] = text;\n\n  database.ref().update(updates)\n    .then(onSuccess).catch(onFailure);\n}\n\nexport function fetchProjectsText(onSuccess, onFailure) {\n  database.ref(\"/profile/projects\").once('value').then(onSuccess).catch(onFailure);\n}","import Modal from './Modal';\nexport default Modal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Flexbox from '../Flexbox';\nimport Card from '../Card';\nimport Text from '../Text';\nimport './style.css';\nimport CSSColor from \"../../../constants/CSSColor\";\n\n\nclass Modal extends React.Component {\n  static get modalSizes() {\n    return {\n      small: {\n        width: 360,\n        height: 240,\n      },\n      medium: {\n        width: 480,\n        height: 360,\n      },\n      large: {\n        width: 640,\n        height: 480,\n      },\n    };\n  }\n\n  onClickModal = (e) => {\n    e.stopPropagation();\n  };\n\n  render() {\n    let size = this.props.size || 'medium';\n    size = Modal.modalSizes[size];\n\n    let shouldShow = this.props.show !== null ? this.props.show : false;\n    let cls = [\"modal\", shouldShow ? \"modal-visible\" : \"modal-hidden\", \"modal-blur\"];\n    cls = cls.join(' ');\n\n    return (\n      <Flexbox className={cls} justifyContent=\"center\" alignItems=\"center\"\n               onClick={this.props.onBackdropClick}>\n        <Card backgroundColor={CSSColor.GRAY_05}\n              style={{width: 'auto', height: 'auto'}}\n              maxWidth={640} maxHeight={480}\n              minWidth={size.width} minHeight={size.height}\n              flexShrink={0} onClick={this.onClickModal}\n              paddingAll={24}>\n          {this.props.children}\n        </Card>\n      </Flexbox>\n    );\n  }\n}\n\nModal.propTypes = {\n  backgroundColor: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  show: PropTypes.bool,\n  onBackdropClick: PropTypes.func,\n};\n\n\nexport default Modal;","import HeaderText from './HeaderText';\nexport default HeaderText;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Flexbox from \"../Flexbox\";\nimport Text from \"../Text\";\n\n\nclass HeaderText extends React.Component {\n  render() {\n    let titleSize = this.props.titleSize || 15;\n    let subtitleSize = this.props.subtitleSize || 15;\n\n    switch (this.props.type) {\n      case 'title_below':\n        return (\n          <Flexbox>\n            {\n              this.props.subtitle ?\n                <Text lineHeight={0.2} size={subtitleSize}\n                      color=\"secondary\">{this.props.subtitle}</Text> :\n                null\n            }\n            <Text fontWeight=\"bold\" size={titleSize}\n                  lineHeight={0.4}>{this.props.title}</Text>\n          </Flexbox>\n        );\n      case 'title_above':\n      default:\n        return (\n          <Flexbox>\n            <Text fontWeight=\"bold\" size={titleSize}\n                  lineHeight={0.4}>{this.props.title}</Text>\n            {\n              this.props.subtitle ?\n                <Text lineHeight={0.2} size={subtitleSize}\n                      color=\"secondary\">{this.props.subtitle}</Text> :\n                null\n            }\n          </Flexbox>\n        );\n    }\n  }\n}\n\nHeaderText.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  titleSize: PropTypes.number,\n  subtitleSize: PropTypes.number,\n  type: PropTypes.oneOf(['title_below', 'title_above']),\n};\n\nexport default HeaderText;","import WorkExperienceCard from './WorkExperienceCard';\nexport default WorkExperienceCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../../constants/CSSColor\";\nimport Flexbox from \"../../../components/Flexbox\";\nimport Card from '../../../components/Card';\nimport Button from '../../../components/Button';\nimport Image from '../../../components/Image';\nimport Text from \"../../../components/Text\";\nimport Modal from '../../../components/Modal';\nimport HeaderText from \"../../../components/HeaderText\";\nimport Logger from '../../../../firebase/logger';\nimport './style.css';\n\n\nclass WorkExperienceCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n    }\n  }\n\n  openModal = () => {\n    this.setState({showModal: true});\n  };\n\n  closeModal = () => {\n    this.setState({showModal: false});\n  };\n\n  onClickCard = (e) => {\n    this.openModal();\n\n    const {name} = this.props.workExpObj;\n\n    // Log\n    Logger.genLog({\n      action: 'click_work_experience_card',\n      description: 'Visited ' + name + ' Card',\n    })\n  };\n\n  onClickDoneButton = (e) => {\n    this.closeModal();\n  };\n\n  render() {\n    const {name, title, date, description, techUsed, logo} = this.props.workExpObj;\n    let header = name + ' - ' + title;\n    let subtitle = date;\n\n    return (\n      <div>\n        <Modal size=\"medium\" show={this.state.showModal}\n               onBackdropClick={this.closeModal}>\n          <Flexbox heightPct={100} widthPct={100}>\n            <HeaderText title={header} subtitle={subtitle}/>\n            <Text color={CSSColor.MODAL_TEXT} fontSize={12}>{description}</Text>\n\n            <Flexbox widthPct={100} heightPct={100} autoMarginTop\n                     flexDirection=\"row\" alignItems=\"flex-end\">\n              <HeaderText title={techUsed} subtitle={\"Technologies Used:\"}\n                          type=\"title_below\" titleSize={12}\n                          subtitleSize={12}/>\n            </Flexbox>\n\n            <Flexbox widthPct={100} autoMarginTop flexDirection=\"row\"\n                     justifyContent=\"flex-end\">\n              <Button label=\"Done\" fontSize={14} lineHeight={0.5}\n                      onClick={this.onClickDoneButton}/>\n            </Flexbox>\n          </Flexbox>\n        </Modal>\n        <Card {...this.props} className=\"work-exp-card\"\n              onClick={this.onClickCard}>\n          <Flexbox>\n            <Image src={logo}/>\n          </Flexbox>\n        </Card>\n      </div>\n    );\n  }\n}\n\nWorkExperienceCard.propTypes = {\n  workExpObj: PropTypes.shape({\n    name: PropTypes.string,\n    title: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    techUsed: PropTypes.string,\n    logo: PropTypes.string,\n  }).isRequired,\n  ...Card.propTypes,\n};\n\n\nexport default WorkExperienceCard;","import React from 'react';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport profile from \"../../../static/Profile\";\nimport Button from '../../components/Button';\nimport Text from \"../../components/Text\";\nimport WorkExperienceCard from \"./WorkExperienceCard\";\nimport TextInput from \"../../components/TextInput\";\nimport {\n  fetchWorkExperienceText,\n  updateWorkExperienceText\n} from \"../../../firebase/profile\";\nimport {getEditMode} from \"../../common/utils\";\nconst firebase = require('firebase');\n\n\nclass WorkExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let edit = getEditMode();\n    let heading = profile.workExperience.heading;\n    let text = profile.workExperience.text;\n    this.state = {\n      heading: heading,\n      text: text,\n      edit: edit,\n      loggedIn: false,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateWorkExperienceText(this.state.heading, this.state.text, () => {\n\n    }, (error) => {\n      alert('Error updating work experience section.');\n    });\n  };\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({loggedIn: true});\n      } else {\n        this.setState({loggedIn: false});\n      }\n    });\n    fetchWorkExperienceText((snap) => {\n      let obj = snap.val();\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n      });\n    });\n  }\n\n  render() {\n    let loggedIn = this.state.loggedIn;\n\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64} marginTop={32}>\n        <Flexbox className=\"overflow-wrap\"\n                 width={900} flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox minWidth={300} width={300} marginRight={16}>\n            <Flexbox flexDirection=\"row\"\n                     widthPct={100} bottomBorder>\n              <Button label=\"Internships\" fontSize={14} bottomBorder\n                      borderWidth={2} borderColor={CSSColor.GRAY_70}/>\n            </Flexbox>\n            <Flexbox paddingHorizontal={16} paddingVertical={16}>\n              {\n                profile.workExperience.objs.map((obj, i) => {\n                  return (\n                    <WorkExperienceCard key={i} marginVertical={12}\n                                        workExpObj={obj}\n                                        borderRadius={1}/>\n                  );\n                })\n              }\n            </Flexbox>\n          </Flexbox>\n          <Flexbox flexGrow={1} marginLeft={16}>\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={1}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={5}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          loggedIn && this.state.edit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update Work Experience\" fontSize={18}\n                      fontWeight={500} borderColor={CSSColor.BLACK_ALPHA_60}\n                      borderWidth={2} borderRadius={6} paddingHorizontal={12}\n                      allBorder lineHeight={0.8}\n                      onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nexport default WorkExperience;","import WorkExperience from './WorkExperience';\nexport default WorkExperience;","import ProjectCard from './ProjectCard';\nexport default ProjectCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSColor from \"../../../../constants/CSSColor\";\nimport Flexbox from \"../../../components/Flexbox\";\nimport Card from '../../../components/Card';\nimport Button from '../../../components/Button';\nimport Image from '../../../components/Image';\nimport Text from \"../../../components/Text\";\nimport Modal from '../../../components/Modal';\nimport HeaderText from \"../../../components/HeaderText\";\nimport Logger from '../../../../firebase/logger';\nimport './style.css';\nimport Icon from \"../../../components/Icon\";\n\n\nclass ProjectCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      cls: \"project-card project-card-animation\",\n    }\n  }\n\n  openModal = () => {\n    this.setState({showModal: true});\n  };\n\n  closeModal = () => {\n    this.setState({showModal: false});\n    this.setState({cls: \"project-card project-card-animation\"});\n  };\n\n  onClickCard = (e) => {\n    this.openModal();\n    // Remove the animation in order to prevent the card from showing on top\n    // of modal\n    this.setState({cls: \"project-card\"});\n\n    const {title} = this.props.projectObj;\n\n    // Log\n    Logger.genLog({\n      action: 'click_project_card',\n      description: 'Visited ' + title + ' Card',\n    })\n  };\n\n  onClickDoneButton = (e) => {\n    this.closeModal();\n  };\n\n  onClickRepoButton = (e) => {\n    e.stopPropagation();\n  };\n\n  render() {\n    const {title, shortDesc, longDesc, techUsed, repo} = this.props.projectObj;\n    let size = \"small\";\n\n    return (\n      <div>\n        <Modal size={size} show={this.state.showModal}\n               onBackdropClick={this.closeModal}>\n          <Flexbox heightPct={100} widthPct={100}\n                   minHeight={Modal.modalSizes[size].height}\n                   minWidth={Modal.modalSizes[size].width}>\n            <HeaderText title={title}/>\n            <Text color={CSSColor.MODAL_TEXT}>{longDesc}</Text>\n\n            <Flexbox widthPct={100} autoMarginTop flexDirection=\"row\"\n                     justifyContent=\"flex-end\" alignItems=\"flex-end\">\n              <Button label=\"Done\" fontSize={14} lineHeight={0.5}\n                      onClick={this.onClickDoneButton}/>\n            </Flexbox>\n          </Flexbox>\n        </Modal>\n        <Card {...this.props} onClick={this.onClickCard}\n              className={this.state.cls}>\n          <Flexbox heightPct={100}>\n            <Flexbox widthPct={100} flexDirection=\"row\">\n              <Text fontWeight=\"bold\">{title}</Text>\n              <Flexbox autoMarginLeft>\n                <Icon src=\"assets/github_icon_dark.png\" href={repo}\n                      target=\"_blank\" size={28}\n                      onClick={this.onClickRepoButton} logClick\n                      logDescription={\"Visited \" + title + \" Repo\"}/>\n              </Flexbox>\n            </Flexbox>\n            <Text>{shortDesc}</Text>\n            <Flexbox autoMarginTop className=\"btnHover\">\n              <Text fontWeight={500} lineHeight={0.4}>{techUsed}</Text>\n            </Flexbox>\n          </Flexbox>\n        </Card>\n      </div>\n    );\n  }\n}\n\nProjectCard.propTypes = {\n  projectObj: PropTypes.shape({\n    title: PropTypes.string,\n    shortDesc: PropTypes.string,\n    longDesc: PropTypes.string,\n    techUsed: PropTypes.string,\n    repo: PropTypes.string,\n  }).isRequired,\n  ...Card.propTypes,\n};\n\n\nexport default ProjectCard;","import React from 'react';\nimport CSSColor from \"../../../constants/CSSColor\";\nimport Flexbox from \"../../components/Flexbox\";\nimport profile from \"../../../static/Profile\";\nimport Button from '../../components/Button';\nimport Text from \"../../components/Text\";\nimport ProjectCard from \"./ProjectCard\";\nimport TextInput from \"../../components/TextInput\";\nimport {getEditMode} from \"../../common/utils\";\nimport {fetchProjectsText, updateProjectsText} from \"../../../firebase/profile\";\n\nconst firebase = require('firebase');\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let edit = getEditMode();\n    let heading = profile.projects.heading;\n    let text = profile.projects.text;\n    this.state = {\n      heading: heading,\n      text: text,\n      edit: edit,\n      loggedIn: false,\n    }\n  }\n\n  onChangeHeading = (e, val) => {\n    this.setState({heading: val});\n  };\n\n  onChangeText = (e, val) => {\n    this.setState({text: val});\n  };\n\n  onClickUpdate = (e) => {\n    // Update About Me info\n    updateProjectsText(this.state.heading, this.state.text, () => {\n    }, (error) => {\n      alert('Error updating projects section.');\n    });\n  };\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({loggedIn: true});\n      } else {\n        this.setState({loggedIn: false});\n      }\n    });\n\n    fetchProjectsText((snap) => {\n      let obj = snap.val();\n      this.setState({\n        heading: obj.heading || this.state.heading,\n        text: obj.text || this.state.text,\n      });\n    });\n  }\n\n  render() {\n    let loggedIn = this.state.loggedIn;\n\n    return (\n      <Flexbox backgroundColor={CSSColor.LIGHT_WHITE} widthPct={100}\n               alignItems=\"center\" paddingVertical={64} marginTop={32}>\n        <Flexbox className=\"overflow-wrap\" width={1000}\n                 flexDirection=\"row\" alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox minWidth={320} maxWidth={320}>\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={20} fontWeight=\"bold\" textarea\n                           value={this.state.heading} rows={2}\n                           onChange={this.onChangeHeading}/> :\n                <Text fontSize={20}\n                      fontWeight=\"bold\">{this.state.heading}</Text>\n            }\n            {\n              loggedIn && this.state.edit ?\n                <TextInput fontSize={13} lineHeight={1.5} textarea\n                           value={this.state.text} rows={7}\n                           onChange={this.onChangeText} fillHeight/> :\n                <Text fontSize={13}\n                      lineHeight={1.5}>{this.state.text}</Text>\n            }\n          </Flexbox>\n          <Flexbox flexDirection=\"row\" alignItems=\"center\" marginLeft={20}\n                   flexWrap={'wrap'}>\n            {\n              profile.projects.objs.slice(0, 4).map((obj, i) => {\n                return (\n                  <ProjectCard key={i}\n                               marginVertical={12} marginHorizontal={12}\n                               projectObj={obj} width={272} height={150}\n                               paddingHorizontal={16} paddingVertical={8}\n                               borderRadius={1}/>\n                );\n              })\n            }\n          </Flexbox>\n        </Flexbox>\n        {\n          loggedIn && this.state.edit ?\n            <Flexbox paddingTop={32}>\n              <Button label=\"Update Projects\" fontSize={18}\n                      fontWeight={500} borderColor={CSSColor.BLACK_ALPHA_60}\n                      borderWidth={2} borderRadius={6} paddingHorizontal={12}\n                      allBorder lineHeight={0.8}\n                      onClick={this.onClickUpdate}/>\n            </Flexbox> :\n            null\n        }\n      </Flexbox>\n    );\n  }\n}\n\nexport default Projects;","import Projects from './Projects';\nexport default Projects;","import {auth} from '../config/firebase';\nconst firebase = require('firebase');\n\n\nexport function loginWithEmail(email, password, onSuccess, onFailure) {\n  auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\n    .then(() => {\n      auth.signInWithEmailAndPassword(email, password)\n        .then((user => {\n          console.log('Successfully logged in.');\n          if (onSuccess) {\n            onSuccess(user);\n          }\n        }))\n        .catch((error) => {\n          console.log('Failed logging in.');\n          if (onFailure) {\n            onFailure(error);\n          }\n        });\n    }).catch((error) => {\n      console.log('Failed logging in.');\n    });\n}\n\nexport function logout(onSuccess, onFailure) {\n  auth.signOut().then(onSuccess).catch(onFailure)\n}","import React from 'react';\nimport Logger from '../firebase/logger';\nimport CSSColor from '../constants/CSSColor';\nimport Flexbox from './components/Flexbox';\nimport Navbar from './components/Navbar';\nimport NavbarUnit from './components/NavbarUnit';\nimport NavbarUnitIcon from './components/NavbarUnitIcon';\nimport Text from './components/Text';\nimport Card from './components/Card';\nimport ProfileImage from './components/ProfileImage';\nimport profile from '../static/Profile';\n\nimport style from './style';\nimport AboutMe from \"./sections/AboutMe\";\nimport WorkExperience from \"./sections/WorkExperience\";\nimport Projects from \"./sections/Projects\";\nimport {logout} from \"../firebase/auth\";\n\nconst firebase = require('firebase');\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  componentDidMount() {\n    let hasLogged = sessionStorage.getItem('hasLogged');\n    if (hasLogged !== '1') {\n      Logger.genLog({\n        action: 'visit_portfolio',\n        context: this.constructor.name,\n      }, (_) => {\n        sessionStorage.setItem('hasLogged', '1');\n      });\n    }\n  }\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({loggedIn: true});\n      } else {\n        this.setState({loggedIn: false});\n      }\n    });\n  }\n\n  onClickLogout = (e) => {\n    logout(() => {\n      this.setState({loggedIn: false});\n    }, (e) => {\n      alert(e);\n    });\n  };\n\n  render() {\n    let loggedIn = this.state.loggedIn;\n\n    let root = process.env.NODE_ENV === 'development' ? '/' : '/portfolio/';\n    return (\n      <Flexbox style={style.root} alignItems=\"center\">\n        <Navbar blur>\n          <NavbarUnit label=\"Daniel Nguyen\" position=\"left\" fontWeight={500}\n                      paddingHorizontal={16} href={root}/>\n          {\n            loggedIn ?\n              <NavbarUnit label=\"Logout\" onClick={this.onClickLogout}\n                          paddingHorizontal={16}/> :\n              null\n          }\n          <NavbarUnit label=\"Resume\" href=\"assets/Resume.pdf\" target=\"_blank\"\n                      logClick={true} logDescription=\"Visited Resume\" allBorder\n                      borderRadius={6}/>\n          <NavbarUnitIcon src={\"assets/github_icon.png\"}\n                          href={profile.githubLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Github\"/>\n          <NavbarUnitIcon src={\"assets/linkedin_icon.png\"}\n                          href={profile.linkedinLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited LinkedIn\"/>\n          <NavbarUnitIcon src={\"assets/facebook_icon.png\"}\n                          href={profile.fbLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Facebook\"/>\n        </Navbar>\n\n        <AboutMe/>\n        <WorkExperience/>\n        <Projects/>\n      </Flexbox>\n    );\n  }\n}\n\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Flexbox from './components/Flexbox';\nimport Navbar from './components/Navbar';\nimport NavbarUnit from './components/NavbarUnit';\nimport NavbarUnitIcon from './components/NavbarUnitIcon';\nimport Text from './components/Text';\nimport TextInput from './components/TextInput';\nimport profile from '../static/Profile';\n\nimport style from './style';\nimport './style.css';\nimport Button from \"./components/Button\";\nimport CSSColor from \"../constants/CSSColor\";\nimport {loginWithEmail} from '../firebase/auth';\nimport history from '../desktop/history';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  onEmailChange = (e, val) => {\n    this.setState({email: val});\n  };\n\n  onPasswordChange = (e, val) => {\n    this.setState({password: val});\n  };\n\n  onClickLogin = (e) => {\n    // Firebase login\n    let root = process.env.NODE_ENV === 'development' ? '/?edit=true' : '/portfolio/?edit=true';\n    loginWithEmail(this.state.email, this.state.password, (user) => {\n      history.push(root);\n    }, (error) => {\n      alert(error);\n    });\n  };\n\n  render() {\n    let root = process.env.NODE_ENV === 'development' ? '/' : '/portfolio/';\n    return (\n      <Flexbox style={style.root} className=\"login-page\" widthPct={100}\n               heightPct={100} alignItems=\"center\" justifyContent=\"center\">\n        <Navbar blur>\n          <NavbarUnit label=\"Daniel Nguyen\" position=\"left\" fontWeight={500}\n                      paddingHorizontal={16} href={root}/>\n          <NavbarUnit label=\"Resume\" href=\"assets/Resume.pdf\" target=\"_blank\"\n                      logClick={true} logDescription=\"Visited Resume\" hasBorder\n                      borderRadius={6}/>\n          <NavbarUnitIcon src={\"assets/github_icon.png\"}\n                          href={profile.githubLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Github\"/>\n          <NavbarUnitIcon src={\"assets/linkedin_icon.png\"}\n                          href={profile.linkedinLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited LinkedIn\"/>\n          <NavbarUnitIcon src={\"assets/facebook_icon.png\"}\n                          href={profile.fbLink} target=\"_blank\"\n                          logClick={true} logDescription=\"Visited Facebook\"/>\n        </Navbar>\n\n        <Flexbox widthPct={100} heightPct={100} alignItems=\"center\"\n                 justifyContent=\"center\">\n          <Flexbox width={300} justifyContent=\"center\" alignItems=\"center\">\n            <Flexbox widthPct={100} paddingVertical={8}>\n              <TextInput fillHeight type=\"email\" placeholder=\"Email\"\n                         onChange={this.onEmailChange}/>\n            </Flexbox>\n            <Flexbox widthPct={100} paddingVertical={8}>\n              <TextInput fillHeight type=\"password\" placeholder=\"Password\"\n                         onChange={this.onPasswordChange}/>\n            </Flexbox>\n\n            <Flexbox paddingVertical={8}>\n              <Button label=\"Login\" fontSize={16} fontWeight={500} allBorder\n                      borderRadius={4} borderWidth={2}\n                      borderColor={CSSColor.BLACK_ALPHA_60}\n                      paddingHorizontal={8} lineHeight={0.5}\n                      onClick={this.onClickLogin}\n                      disabled={\n                        this.state.email.length === 0 ||\n                        this.state.password.length === 0\n                      }\n                      disabledColor={CSSColor.GRAY_20}\n                      disabledBorderColor={CSSColor.GRAY_20}\n              />\n            </Flexbox>\n          </Flexbox>\n        </Flexbox>\n      </Flexbox>\n    );\n  }\n}\n\n\nexport default Login;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport MobileHome from './mobile/Home';\nimport DesktopHome from './desktop/Home';\nimport {isMobileOnly} from 'react-device-detect';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, HashRouter} from \"react-router-dom\";\nimport history from \"./desktop/history\";\nimport Login from \"./desktop/Login\";\n\n\nif (isMobileOnly) {\n  ReactDOM.render(<MobileHome/>, document.getElementById('root'));\n} else {\n  ReactDOM.render(\n    <HashRouter history={history}>\n      <Route exact path={\"/\"} component={DesktopHome}/>\n      <Route exact path={\"/login\"} component={Login}/>\n    </HashRouter>,\n    document.getElementById('root')\n  );\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}